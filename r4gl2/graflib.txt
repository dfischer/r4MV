| libreria de graficos y cursor
| PHREDA
|---------------------------------------
^reda4.txt
^sincos.txt
^colorlib.txt

|-----  cursor centro (xc,yc) ancho (w) alto (h)
#:xc #:yc #:w #:h
#:wx1 #:wy1 #:wx2 #:wy2	| ventana de texto
#:th #:tw					| filas/columnas texto

|---- ubicacion y desplazamiento
::pos	| xy --
	'yc ! 'xc ! ;
::+pos	| xy --
	'yc +! 'xc +! ;
::dim | wh --
	'h ! 'w ! ;
::+dim | wh --
	'h +! 'w +! ;
::todo
	sw sh over 2/ over 2/ pos dim ;

|----------------------------------
::fdim | wh --
	sh 16 *>> 'h !
	sw 16 *>> 'w ! ;

::fpos | xy --
	sh 2/ swap over neg 16 *>>  + 'yc ! 
	sw 2/ swap over 16 *>> + 'xc ! ;

::fzoom | zoom --
	dup sw 16 *>> 'w +!
	sh 16 *>> 'h +! ;

	
|----------------------------------
::@cursor | 'adr -- 'adr+
	@+ sw 2/ swap over 16 *>> + 'xc !
	@+ sh 2/ swap over neg 16 *>>  + 'yc ! 
	@+ sw 16 *>> 'w ! 
	@+ sh 16 *>> 'h ! ;

::mem>dimpos | adr --
	@+ 'xc ! @+ 'yc ! @+ 'w ! @ 'h !
	w xc 2dup + 2/ 'xc ! - 'w ! h yc 2dup + 2/ 'yc ! - 'h ! ;

|--------- sprite en 32 bits
| fuente vectorial en 32bits | 14 - 14 - 4
| 0000 0000 0000 00 | 00 0000 0000 0000 | 0000
| x					y			      control
::>xy | v -- x y
	dup  18 >> w 14 *>> xc + swap 14 << 18 >> h 14 *>> yc + ;
::xy> | x y -- v
	yc - 14 << h / $3fff and 4 << swap xc - 14 << w / $3fff and 18 << or ;

::whin | x y -- 1/0
	yc - h 2/ + -? ( 2drop 0 ; ) h - +? ( 2drop 0 ; ) drop
	xc - w 2/ + -? ( 0 nip ; ) w - +? ( 0 )( 1 ) nip ;

|------------------ dibujo sobre cursor
::fbor 
	w xc over 2/ - h yc over 2/ - rot swap | w h 0 0
	2dup op pick3 pick2 + dup pick2 line
	pick3 pick2 + line over pick3 pick2 + line line 2drop ;

::ffill 
	w xc over 2/ - h yc over 2/ - rot swap | w h 0 0
	2dup op	pick3 pick2 + dup pick2 pline
	pick3 pick2 + pline over pick3 pick2 + pline pline poli 2drop ;

::fcaja | --
	w h min 3 >> >r xc w 2/ - yc h 2/ - r + 2dup 2dup op
	r - 2dup cp swap r + swap 2dup pcurve swap r 2* - w + swap 2dup pline
	swap r + swap 2dup cp r + 2dup pcurve r 2* - h + 2dup pline
	r + 2dup cp swap r - swap 2dup pcurve swap r 2* + w - swap 2dup pline
	swap r - swap 2dup cp r> - pcurve pline poli ;

::mcursor | x y --
	dup xc w 2/ - swap op xc w 2/ + swap line 
	dup yc h 2/ - op yc h 2/ + line ;


|---- lineas gruesas
#gg1 4 #gg2 4
#ss1 $200 #ss2 $200
#ang

|---- lineas gruesas
|                    1      2,3  4-8    8-16   16-32  32-64  64-128 128-256 256-512  512-1024
|#escala $400 $200 $100 $80     $40      $20      $10        $8	    $4             $2
:calcsum | n -- n suma
	2 <? ( $400 )( 4 <? ( $200 )( 8 <? ( $100 )( 16 <? ( $80 )( 32 <? ( $40 )( 64 <? ( $20 )( 128 <?  ( $10 )( $8 ) ) ) ) ) ) ) ;
:lineag!	| grosor --
	calcsum 'ss1 ! 'gg1 ! ;
:calg1 | angulo -- x y 
	sincos gg1 16 *>> rot + swap gg1 16 *>> rot + swap ;
:calg2 | angulo -- x y 
	sincos gg2 16 *>> rot + swap gg2 16 *>> rot + swap ;

|----- figuras geometricas
::cajau | x2 y2 x1 y1 --
	ink@ >r
	oscuro over pick3 op 2dup line pick3 over line
	r ink claro 2over line drop swap line drop 
	r> ink ;

::cajad | x2 y2 x1 y1 --
	ink@ >r
	claro over pick3 op 2dup line pick3 over line
	r ink oscuro 2over line drop swap line drop 
	r> ink ;

|---------------------------------
::hline | x y x --
	over op line ;
::vline | x y y --
	r> over r> op line ;

::box | x y r --
	>r r - swap r - swap 2dup 2dup op r 2* + 2dup line
	swap r 2* + swap 2dup line r> 2* - line line ;

::fbox | xc yc r --
	>r r - swap r - swap 2dup 2dup op r 2* + 2dup pline
	swap r 2* + swap 2dup pline r> 2* - pline pline poli ;

::vfill | ancho alto x y --
	2swap >r >r
	2dup op over r> + over 2dup pline r + pline
	2dup r> + pline pline poli ;
	
::circle | xc yc r --
	>r r - 2dup 2dup op	swap r - swap 2dup cp
	r + 2dup curve	r + 2dup cp swap r + swap 2dup curve
	swap r + swap 2dup cp r - 2dup curve r> - cp curve ;

::fcircle | xc yc r --
	>r r - 2dup 2dup op swap r - swap 2dup cp
	r + 2dup  pcurve r + 2dup cp	swap r + swap 2dup pcurve
	swap r + swap 2dup cp r - 2dup 
	pcurve r> - cp pcurve poli ;

|::fcircle | x y g --
|	lineag!
|	2dup 0 calg1 op
|	0 ( $800 <? )( >r
|		2dup r calg1 pline
|		r> ss1 + ) drop
|	0 calg1 pline poli ;

::ellipse | xc yc rx ry --
	>r >r r - 2dup 2dup op	
	swap r> r> dup >r swap >r  - swap 2dup cp
	r + 2dup curve	r + 2dup cp 
	swap r> r> dup >r swap >r + swap 2dup curve
	swap r> r> dup >r swap >r + swap 2dup cp r - 2dup curve r> - cp curve rdrop ;

::gcursor | x y g --
	lineag!
	2dup 0 calg1 op
	0 ( $800 <? )( >r
		2dup r calg1 line
		r> ss1 + ) drop
	0 calg1 line ;

::glineg |x y x y g--
	lineag!
	pick3 pick2 - pick3 pick2 - atan2 $200 + 'ang ! | +1/4 de angulo
	2over ang calg1 op
	0 ( $400 <? )( >r 
		2dup ang r + calg1 pline
		r> ss1 + ) drop
	2dup ang $400 + calg1 pline
	2drop
	$400 ( $800 <? )( >r 
		2dup ang r + calg1 pline
		r> ss1 + ) drop
	ang calg1 pline poli ;

| lineas multigruesas
:glinei |x y x y --
	pick3 pick2 - pick3 pick2 - atan2 $200 + 'ang ! | +1/4 de angulo
	2over ang calg2 op
	0 ( $400 <? )( >r 
		2dup ang r + calg1 pline
		r> ss1 + ) drop
	2dup ang $400 + calg1 pline
	2drop
	$400 ( $800 <? )( >r 
		2dup ang r + calg2 pline
		r> ss2 + ) drop
	ang calg2 pline poli ;

#x1 #y1 #x2 #y2

::gg | grosor --
	gg2 'gg1 ! ss2 'ss1 !
	calcsum 'ss2 ! 'gg2 ! ;

::gop | x y --
	'y1 ! 'x1 ! ;

::gline | x y --
	y1 =? ( swap x1 =? ( 2drop ; ) swap ) 
	x1 y1 2over  'y1 ! 'x1 ! glinei ;

::gcp | x y --
	'y2 ! 'x2 ! ;

|---------spline 
:sp-cal1 | x y _cx _cy px py -- x y xn yn
	rot 2* + pick3 + 2 >> >r			| x y cx px   r: ye
	swap 2* + pick2 + 2 >> r> ;		| x y xe ye
	
:sp-cal2 | cx cy px py -- x y 
	rot + 2/ >r + 2/ r> ;

:sp-dist | x y xe ye -- x y xe ye dd
	pick3 pick2 - dup * pick3 pick2 - dup * + ;

:spl | x y cx cy px py --
	2dup >r >r 2over >r >r sp-cal1 r> r> 			| x y nx ny cx cy --  r: px py
	sp-dist 96 <? ( nip 4drop rdrop rdrop 2 >> swap 2 >> swap gline ; ) drop
	>r >r 2over r> r> 2dup >r >r sp-cal2 2swap		| x y xa ya nx ny -- r: cx cy px py
	2dup r> r> r> r> 2dup >r >r sp-cal2 r> r> 		| x y xa ya nx ny nx ny xb yb px py
	spl spl ;

| falta cambiar tamanio en curvas
|#ga #sa
::gcurve | xy --
|	gg2 'ga ! ss2 'sa !
	2 << swap 2 << swap x2 2 << y2 2 << x1 2 << y1 2 << spl ;

|------- Grilla
:hlinea | x --
	dup yc h 2/ - op yc h 2/ + line ;
:vlinea | y --
	dup xc w 2/ - swap op xc w 2/ + swap line ;

::rgrilla | escala --
	0? ( drop ; ) 
	w over / h pick2 / rot 2/ 1+
	( 1? )( 1-
		pick2 over * dup xc + hlinea neg xc + hlinea
		over over * dup yc + vlinea neg yc + vlinea
		) 3drop ;

|-------- circulo de color
#:luz 0
::colorcircle | x y --
	0 ( 256 <? )(
		0 ( $600 <? )(		| x y r a
			luz pick2 pick2  abh>rgb ink | 
			2dup >r >r	| x y r a
			$15555 16 *>>	| de color a angulo|	$800 $600 */	| 1.3333
			swap 2/ ar>xy |::ar>xy | xc yc bangle r -- xc yc x y
			3 fbox | 4 fcircle| pix!!
			r> r> 34 pick2 3 >>  - + | segun radio incrementa
			) drop
		8 + ) drop
	2drop ;

::colorpick | x y r --
	 ( +? )(
		0 ( $600 <? )(		| x y r a
			luz pick2 pick2  abh>rgb ink | 
			2dup >r >r	| x y r a
			$15555 16 *>>	| de color a angulo|	$800 $600 */	| 1.3333
			swap ar>xy |::ar>xy | xc yc bangle r -- xc yc x y
			3 fbox | 4 fcircle| pix!!
			r> r> 34 pick2 3 >>  - + | segun radio incrementa
			) drop
		4 - ) drop
	2drop ; 


|---- texto->cuadro
::>win | y2 x2 y1 x1 --
	'wx1 !+ !+ !+ ! 
::full	
	wx2 wx1 2dup - 'w ! + 2/ 'xc ! wy2 wy1 2dup - 'h ! + 2/ 'yc ! ;

|-------------------------------------
::hsplit | cc --
	wx2 wx1 - swap / 'w ! wx1 w 2/ + 'xc ! ;
::xnext
	w 'xc +! ;

::vsplit | cc --
	wy2 wy1 - swap / 'h ! wy1 h 2/ + 'yc ! ;
::ynext
	h 'yc +! ;

