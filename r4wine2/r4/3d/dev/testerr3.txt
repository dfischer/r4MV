| calculo de error de vertices
| PHREDA 2017
^r4/lib/gui.txt

#zlen
#isovec )( 1024
#isovec> 'isovec

#sx #sy #sz

#ulevel 2
#level
#zposnow

#map3d

:2/a | a -- b
	dup 31 >> - 2/ ;

:2/b | a -- b c
	dup
	dup 31 >> - 2/
	swap over - swap ;

|-------------------------------------
| x y z n m -- x y z n m x2 y2 z2
:c000
	isovec> dup >r 36 -
	@+ 2/a r!+ @+ 2/a r!+ @+ 2/a r!+
	@+ 2/a r!+ @+ 2/a r!+ @+ 2/a r!+
	@+ 2/a r!+ @+ 2/a r!+ @ 2/a r!+
	r> 'isovec> !
	pick2 pick2 pick2 ;
:c001
	isovec> dup >r 36 -
	@+ 2/b 'sx ! r!+ @+ 2/b 'sy ! r!+ @+ 2/b 'sz ! r!+
	@+ 2/a r!+ @+ 2/a r!+ @+ 2/a r!+
	@+ 2/a r!+ @+ 2/a r!+ @ 2/a r!+
	r> 'isovec> !
	pick2 sx + pick2 sy + pick2 sz + ;
:c010
	isovec> dup >r 36 -
	@+ 2/a r!+ @+ 2/a r!+ @+ 2/a r!+
	@+ 2/b 'sx ! r!+ @+ 2/b 'sy ! r!+ @+ 2/b 'sz ! r!+
	@+ 2/a r!+ @+ 2/a r!+ @ 2/a r!+
	r> 'isovec> !
	pick2 sx + pick2 sy + pick2 sz + ;
:c011
	isovec> dup >r 36 -
	@+ 2/b 'sx ! r!+ @+ 2/b 'sy ! r!+ @+ 2/b 'sz ! r!+
	@+ 2/b 'sx +! r!+ @+ 2/b 'sy +! r!+ @+ 2/b 'sz +! r!+
	@+ 2/a r!+ @+ 2/a r!+ @ 2/a r!+
	r> 'isovec> !
	pick2 sx + pick2 sy + pick2 sz + ;
:c100
	isovec> dup >r 36 -
	@+ 2/a r!+ @+ 2/a r!+ @+ 2/a r!+
	@+ 2/a r!+ @+ 2/a r!+ @+ 2/a r!+
	@+ 2/b 'sx ! r!+ @+ 2/b 'sy ! r!+ @ 2/b 'sz ! r!+
	r> 'isovec> !
	pick2 sx + pick2 sy + pick2 sz + ;
:c101
	isovec> dup >r 36 -
	@+ 2/b 'sx ! r!+ @+ 2/b 'sy ! r!+ @+ 2/b 'sz ! r!+
	@+ 2/a r!+ @+ 2/a r!+ @+ 2/a r!+
	@+ 2/b 'sx +! r!+ @+ 2/b 'sy +! r!+ @ 2/b 'sz +! r!+
	r> 'isovec> !
	pick2 sx + pick2 sy + pick2 sz + ;
:c110
	isovec> dup >r 36 -
	@+ 2/a r!+ @+ 2/a r!+ @+ 2/a r!+
	@+ 2/b 'sx ! r!+ @+ 2/b 'sy ! r!+ @+ 2/b 'sz ! r!+
	@+ 2/b 'sx +! r!+ @+ 2/b 'sy +! r!+ @ 2/b 'sz +! r!+
	r> 'isovec> !
	pick2 sx + pick2 sy + pick2 sz + ;
:c111
	isovec> dup >r 36 -
	@+ 2/b 'sx ! r!+ @+ 2/b 'sy ! r!+ @+ 2/b 'sz ! r!+
	@+ 2/b 'sx +! r!+ @+ 2/b 'sy +! r!+ @+ 2/b 'sz +! r!+
	@+ 2/b 'sx +! r!+ @+ 2/b 'sy +! r!+ @ 2/b 'sz +! r!+
	r> 'isovec> !
	pick2 sx + pick2 sy + pick2 sz + ;

#lsumac c000 c001 c010 c011 c100 c101 c110 c111

| x y z -- x y z x2 y2 z2
:t000
	pick2 pick2 pick2 ;
:t001
	isovec> 36 - >r
	pick2 r@+ + pick2 r@+ + pick2 r> @ + ;
:t010
	isovec> 24 - >r
	pick2 r@+ + pick2 r@+ + pick2 r> @ + ;
:t011
	isovec> 36 - >r
	pick2 r@+ + r 8 + @ + pick2 r@+ + r 8 + @ + pick2 r@+ + r> 8 + @ + ;
:t100
	isovec> 12 - >r
	pick2 r@+ + pick2 r@+ + pick2 r> @ + ;
:t101
	isovec> 36 - >r
	pick2 r@+ + r 20 + @ + pick2 r@+ + r 20 + @ + pick2 r@+ + r> 20 + @ + ;
:t110
	isovec> 24 - >r
	pick2 r@+ + r 8 + @ + pick2 r@+ + r 8 + @ + pick2 r@+ + r> 8 + @ + ;
:t111
	isovec> 36 - >r
	pick2 r@+ + r 8 + @ + r 20 + @ + pick2 r@+ + r 8 + @ + r 20 + @ + pick2 r@+ + r 8 + @ + r> 20 + @ + ;

#lsuma t000 t001 t010 t011 t100 t101 t110 t111

:getn | x y z n -- x y z x1 y1 z1
	2 << 'lsuma + @ exec ;


:saveinmem | x y z child -- x y z
	dup zposnow 3 << or
	4 << map3d + >r
	1 r +! 4 r+
	getn r!+ r!+ r!+
	rdrop
	;


:drawc
	0 ( 8 <? )( dup >r saveinmem r> 1+ ) drop
	0 getn p3d op
	1 getn p3d line
	3 getn p3d line
	2 getn p3d line
	0 getn p3d line
	4 getn p3d op
	5 getn p3d line
	7 getn p3d line
	6 getn p3d line
	4 getn p3d line
	0 getn p3d op 4 getn p3d line
	1 getn p3d op 5 getn p3d line
	2 getn p3d op 6 getn p3d line
	3 getn p3d op 7 getn p3d line
	3drop
	;

:child | x y z nro -- x y z xn yn zn
	dup zposnow $fffffff8 and or 'zposnow !
	$7 and 2 << 'lsumac + @ exec ;

:drawlev | x y z --
	level 0? ( drop drawc -36 'isovec> +! ; )
	1- 'level !
	zposnow 3 << 'zposnow !
	0 child drawlev
	1 child drawlev
	2 child drawlev
	3 child drawlev
	4 child drawlev
	5 child drawlev
	6 child drawlev
	7 child drawlev
	1 'level +!
	3drop
	-36 'isovec> +!
	zposnow 3 >> 'zposnow !
	;

::drawoctree1 | --
	1.0 clz 6 - 'zlen ! | -0.5..0.5 = 1.0
	'isovec >r
	-0.5 -0.5 -0.5 transform 'sz ! 'sy ! 'sx !
	-0.5 -0.5  0.5 transform rot sx - r!+ swap sy - r!+ sz - r!+
	-0.5  0.5 -0.5 transform rot sx - r!+ swap sy - r!+ sz - r!+
	 0.5 -0.5 -0.5 transform rot sx - r!+ swap sy - r!+ sz - r!+
	r> 'isovec> !
	ulevel 'level !
	0 'zposnow !
	sx sy sz drawlev
	;

|-------------
:2/b | a -- b
	dup dup 31 >> - 2/ - ;

:2/b | a -- b
	2/a ;

:reduce
	isovec> dup >r 48 -
	@+ 2/a r!+ @+ 2/a r!+ @+ 2/a r!+
	@+ 2/a r!+ @+ 2/a r!+ @+ 2/a r!+
	@+ 2/a r!+ @+ 2/a r!+ @+ 2/a r!+
	@+ 2/a r!+ @+ 2/a r!+ @ 2/a r!+
	r> 'isovec> !
	;

:restac
	%111 xor

	2 << dup 2* + 48 - isovec> + >r | 12*
	pick2 r@+ 2/b - pick2 r@+ 2/b - pick2 r> @ 2/b -
	reduce

|	2 << dup 2* + isovec> + >r | 12*
|	pick2 r@+ - pick2 r@+ - pick2 r> @ -
|	48 'isovec> +!
	;

:sumac | x y z node bitm nro -- x y z node bitm xn yn zn
	%100 and? ( restac ; )

	2 << dup 2* + 48 - isovec> + >r | 12*
	pick2 r@+ 2/b + pick2 r@+ 2/b + pick2 r> @ 2/b +
	reduce

|	2 << dup 2* + isovec> + >r | 12*
|	pick2 r@+ + pick2 r@+ + pick2 r> @ +
|	48 'isovec> +!
	;

:child | x y z nro -- x y z xn yn zn
	dup zposnow $fffffff8 and or 'zposnow !
	sumac ;

:getnn
	%111 xor
	2 << dup 2* + 48 - isovec> + >r | 12*
	pick2 r@+ - pick2 r@+ - pick2 r> @ -
	;

:getn
	%100 and? ( getnn ; )
	2 << dup 2* + 48 - isovec> + >r | 12*
	pick2 r@+ + pick2 r@+ + pick2 r> @ +
	;

:saveinmem | x y z child -- x y z
	dup zposnow 3 << or
	4 << map3d + >r
	1 r +! 4 r+
	getn r!+ r!+ r!+
	rdrop
	;

:drawc
	0 ( 8 <? )( dup >r saveinmem r> 1+ ) drop
	0 getn p3d op
	1 getn p3d line
	3 getn p3d line
	2 getn p3d line
	0 getn p3d line
	4 getn p3d op
	5 getn p3d line
	7 getn p3d line
	6 getn p3d line
	4 getn p3d line
	0 getn p3d op 4 getn p3d line
	1 getn p3d op 5 getn p3d line
	2 getn p3d op 6 getn p3d line
	3 getn p3d op 7 getn p3d line
	3drop
	;

:drawlev2 | x y z --
	level 0? ( drop drawc -48 'isovec> +! ; )
	1- 'level !
	zposnow 3 << 'zposnow !
	0 child drawlev2
	1 child drawlev2
	2 child drawlev2
	3 child drawlev2
	4 child drawlev2
	5 child drawlev2
	6 child drawlev2
	7 child drawlev2
	1 'level +!
	3drop
	-48 'isovec> +!
	zposnow 3 >> 'zposnow !
	;

::drawoctree2 | --
	1.0 clz 6 - 'zlen ! | -0.5..0.5 = 1.0
	0 0 0 transform 'sz ! 'sy ! 'sx !
	'isovec >r
	0.5 neg
	dup dup dup  transform rot sx - r!+ swap sy - r!+ sz - r!+
	dup dup dup neg transform rot sx - r!+ swap sy - r!+ sz - r!+
	dup dup neg over transform rot sx - r!+ swap sy - r!+ sz - r!+
	dup neg dup transform rot sx - r!+ swap sy - r!+ sz - r!+
	r> 'isovec> !
	ulevel 'level !
	0 'zposnow !
	sx sy sz drawlev2
	;


|-------------
:3dop transform p3d op ;
:3dline transform p3d line ;

:freelook
	xymouse
	sh 2/ - 7 << swap
	sw 2/ - neg 7 << swap
	neg mrotx mroty
	;

#sizx #sizy #sizz

:drawz | z --
	sizx neg sizy neg pick2 3dop
	sizx sizy neg pick2 3dline
	sizx sizy pick2 3dline
	sizx neg sizy pick2 3dline
	sizx neg sizy neg rot 3dline ;

:drawl | x1 x2 --
	2dup sizz neg 3dop sizz 3dline ;

:box3d | sx sy sz --
	'sizz ! 'sizy ! 'sizx !
	sizz neg drawz sizz drawz
	sizx neg sizy neg drawl sizx sizy neg drawl
	sizx sizy drawl sizx neg sizy drawl
	;


#xcam 0 #ycam 0 #zcam 2.0

:p3d2 | x y z -- x y
	dup >r
	sh swap */ oy + swap
	sh r> */ ox + swap ;

:clearmap
	map3d >r
	1024 ( 1? )( 1- 0 r!+  ) drop rdrop ;

:dumpmap
	map3d >r
	0 ( 64 <? )(
		dup "%h " print
		r@+ "%d " print
		r@+ r@+ r@+ ".%d.%d.%d. " print
		cr allowchome
		1+ ) drop rdrop ;

#mode 'drawoctree1

:main
	mark
	sw sh o3dmode
	here 'map3d !
	33
	show clrscr
		dup "%d" print cr

		matini
		freelook
		xcam ycam zcam mtrans
|		verde 0.5 0.5 0.5 box3d

		clearmap
		amarillo mode exec
		verde dumpmap

		[ -1 'ulevel +! ; ] <up>
		[ 1 'ulevel +! ; ] <dn>

		[ -0.01 'ycam +! ; ] <pgup>
		[ 0.01 'ycam +! ; ] <pgdn>

        [ 'drawoctree1 'mode ! ; ] <f1>
        [ 'drawoctree2 'mode ! ; ] <f2>
		'exit >esc<
	;

: main ;