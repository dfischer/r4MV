| mask buffer - convex polyfill
| PHREDA 2015
|-------------------------
^r4/lib/3dmat.txt

#maskb		| mem maskbuffer
#segs		| mem polys

#py #px
#ymin 0
#ymax 1023

|--- maskbuffer | 1024*1024
:mask.adr | x y -- m d
	1 pick2 $1f and << rot 5 >> 2 << rot 7 << + maskb + ;

::maskb.get | x y -- b
	mask.adr @ and ;

::maskb.set | x y --
	mask.adr dup @ rot not and swap ! ;

:gmask1
	$1f and -2 swap << not ;

:gmask2
	$1f and -1 swap << ;

:filline | x1 y1 x2 y2 a --
	2 << pick3 7 << + maskb + >a
	rot - | x1 x2 cnt
	rot gmask2 rot gmask1 and not
	swap 1+
	( 1? )( 1-
		a@ pick2 and a!
		128 a+
		) 2drop ;

::maskb.rset | x1 y1 x2 y2 --
	pick3 5 >>
	pick2 5 >> =? ( filline ; )
	2 << pick3 7 << + maskb + >a
	rot - 							| x1 x2 cnty
	over 5 >> pick3 5 >> - 1- swap	| x1 x2 cntx cnty
	2swap gmask1 not swap gmask2 not
	2swap 1+						| maska maskb cntx cnty
	( 1? )( 1- a@
		pick3 and a> !+ 				| maska maskb cntx cnty adr
		pick2 ( 1? )( 1- 0 rot !+ swap ) drop
		pick4 over @ and swap !
		128 a+
		) 4drop ;


:rgetline | x1 y1 x2 y2 a -- b
	2 << pick3 7 << + maskb + >a
	rot - | x1 x2 cnt
	rot gmask2 rot gmask1 and
	swap 1+	| mask cnt
	( 1? )( 1-
		a@ pick2 and? ( 3drop 1 ; ) drop
		128 a+
		) 2drop
	0 ;

::maskb.rget | x1 y1 x2 y2 -- b
	pick3 5 >>
	pick2 5 >> =? ( rgetline ; )
	2 << pick3 7 << + maskb + >a
	rot - 							| x1 x2 cnty
	over 5 >> pick3 5 >> - 1- swap	| x1 x2 cntx cnty
	2swap gmask1 swap gmask2
	2swap 1+						| maska maskb cntx cnty
	( 1? )( 1- a> @+
		pick4 and? ( 4drop 2drop 1 ; ) drop	| maska maskb cntx cnty adr
		pick2 ( 1? )( 1- swap
			@+ -1 <>? ( 4drop 3drop 1 ; ) drop
			swap ) drop
		@ pick4 and? ( 4drop drop 1 ; ) drop
		128 a+
		) 4drop
	0 ;


#realmaskb
::maskb.clear
	realmaskb sh 5 << ( 1? )( -1 rot !+ swap 1- ) 2drop ;

::maskb.ini
	here dup 'maskb !
	>a
	oy neg 5 << ( 1? )( 0 a!+ 1- ) drop
	a> 'realmaskb !
	sh 5 << ( 1? )( -1 a!+ 1- ) drop
	oy neg 5 << ( 1? )( 0 a!+ 1- ) drop
	a> dup 'segs !
	1024 3 << +
	'here ! ;

|------------------------------------
::maskpxy | color x y --
	2dup mask.adr swap over @
	nand? ( nip 4drop ; )
	not over @ and swap !
	oy + setxy a!+ ;

::maskpxyo | color x y --
	2dup maskb.set
	oy + setxy a!+ ;

:proc8 | mask -- mask
	$ff nand? ( 32 a+ ; )	| todos 0
	$01 and? ( ink@ a!+ )( 4 a+ )
	$02 and? ( ink@ a!+ )( 4 a+ )
	$04 and? ( ink@ a!+ )( 4 a+ )
	$08 and? ( ink@ a!+ )( 4 a+ )
	$10 and? ( ink@ a!+ )( 4 a+ )
	$20 and? ( ink@ a!+ )( 4 a+ )
	$40 and? ( ink@ a!+ )( 4 a+ )
	$80 and? ( ink@ a!+ )( 4 a+ )
	;

:oneword | nro --
	0? ( 128 a+ drop ; )
	-1 =? ( 32 ( 1? )( ink@ a!+ 1- ) 2drop ; )
	proc8 8 >> proc8 8 >> proc8 8 >> proc8 drop ;

:maskfpxl | x1 y x2 --
	pick2 $ffffffe0 and pick2 oy + setxy 		| x y x2
	pick2 5 >> 2 << rot 7 << + maskb + >b	| x x2
	gmask1 swap gmask2 and
	b@ 2dup and oneword swap not and b! ;

::maskfpx | x y x --
	dup 5 >> pick3 5 >> -
	0? ( drop maskfpxl ; ) 1- >b				| x1 y x2 r:cntx
	pick2 $ffffffe0 and pick2 oy + setxy 		| x y x2   r:cntx
	pick2 5 >> 2 << rot 7 << + maskb + 		| x1 x2 adr
	b> swap >b                              | x1 x2 cntx
	rot gmask2 b@ 2dup and oneword swap not and b!+			| x2 cntx
	( 1? )( b@ oneword 0 b!+ 1- ) drop
	gmask1 b@ 2dup and oneword swap not and b!
	;


::maskfpy | x y1 y2 --
	pick2 pick2 oy + setxy 		| x y1 y2
	pick2 5 >> 2 << pick2 7 << + maskb + >b	| x y1 y2
	swap - 1 rot $1f and << | cnty mask
	swap 1+
	( 1? )( 1- | mask cnty
		b@ pick2 and? ( ink@ a!+ )( 4 a+ )
		pick2 not and b!+
		sw 1- 2 << a+ 124 b+
		) 2drop ;


:maskfpxyl | x1 y1 x2 y2 --
	pick3 $ffffffe0 and pick3 oy + setxy
	pick3 5 >> 2 << pick3 7 << + maskb + >b
	rot - 						| x1 x2 cnty
	rot gmask2 rot gmask1 and	| cntx mask
	swap 1+ ( 1? )(
		b@ pick2 over and oneword pick2 not and b!+
		sw 32 - 2 << a+
		124 b+
		1- ) 2drop ;

::maskfpxy | x1 y1 x2 y2 --
	over 5 >> pick4 5 >> -
	0? ( drop maskfpxyl ; ) 1- >b	| x1 y1 x2 y2 r:cntx
	pick3 $ffffffe0 and pick3 oy + setxy
	pick3 5 >> 2 << pick3 7 << + maskb +
	b> swap >b >r					| x1 y1 x2 y2   r:cntx adr
	rot -							| x1 x2 cnty
	rot gmask2 rot gmask1 			| cnty m1 m2
	swap rot
	r> swap	1+			| m2 m1 cntx cnty
	( 1? )(
		pick2 b@ 2dup and oneword swap not and b!+			| x2 cntx
		over ( 1? )( b@ oneword 0 b!+ 1- ) drop
		pick3 b@ 2dup and oneword swap not and b!+			| x2 cntx
		32 pick2 2 + - 2 << b+
		sw pick2 2 + 5 << - 2 << a+
		1- ) 4drop ;

|--- convex polygon
#FBASE	16

::maskop | x y --
	ymin 3 << segs + >a
	ymax ymin - 1+ ( 1? )( 1- $7fffffff a!+ -1 a!+ ) drop 
	dup 'ymin ! dup 'ymax !
	over FBASE << dup pick2 3 << segs + !+ !
	'py ! 'px !
	;

::maskop2 | x y --
	ymin <? ( dup 'ymin ! )
 	ymax >? ( dup 'ymax ! )
	2dup 3 << segs + >a
	dup FBASE <<
	a@+ <? ( dup a> 4 - ! )
	a@+ >? ( dup a> 4 - ! )
	2drop 
	'py ! 'px !
	;

:enlinea | x y --
	3 << segs + >a
	dup FBASE <<
	a@+ <? ( dup a> 4 - ! )
	a@+ >? ( dup a> 4 - ! )
	drop
	'px !
	;

::maskline | x y --
	py =? ( enlinea ; )
	px py 2over 'py ! 'px !
	pick2 >? ( 2swap ) | x2 y2 x1 y1
	ymin <? ( dup 'ymin ! )
 	rot ymax >? ( dup 'ymax ! )		| comprueba el mayor
	>r >r FBASE << swap FBASE << 	| x1 x2
	over - r> r> over -				| x1 (x2-x1) y1 (y2-y1)
	rot over /					| x1 y1 (y2-y1) t
	rot 3 << segs + >a				| x1 (y2-y1) t
	rot rot 1+				| t x1 cnt
	( 1? )( 1- swap
		a@+ <? ( dup a> 4 - ! )
		a@+ >? ( dup a> 4 - ! )
		pick2 + swap )
	3drop ;

::maskpoly
	ymax
	ymin dup 3 << segs + >r
	( over <=? )(
		r> @+ FBASE >> swap @+ FBASE >> swap >r
 		maskfpx
		1+ ) 2drop r> drop ;
