| boxprint
| PHREDA 2017
|-------------------------
^r4/lib/input.txt

^r4/lib/rfont.txt
^inc/rft/architectsdaughter.rft
^inc/rft/archivoblackregular.rft
^inc/rft/comfortaa_bold.rft
^inc/rft/comfortaa_thin.rft
^inc/rft/dejavusans.rft
^inc/rft/dejavuserif.rft
^inc/rft/dejavuserifbold.rft
^inc/rft/droidsansbold.rft
^inc/rft/gooddog.rft
^inc/rft/opensanslight.rft
^inc/rft/opensansregular.rft
^inc/rft/robotobold.rft
^inc/rft/robotolight.rft
^inc/rft/robotoregular.rft
^inc/rft/robotothin.rft

|---- font
#fontlist
architectsdaughter
archivoblackregular
comfortaa_bold
comfortaa_thin
dejavusans
dejavuserif
dejavuserifbold
droidsansbold
gooddog
opensanslight
opensansregular
robotobold
robotolight
robotoregular
robotothin
robotothin

::setfont | nro size --
	>r $f and 2 << 'fontlist + @ exec r> rfont! ;

::setfont3d | nro size --
	>r $f and 2 << 'fontlist + @ exec r> rfont3d! ;

|-------------------------------
:cntlin | adr -- c
	1 swap ( c@+ 1? )(
		10 =? ( rot 1+ rot rot ) | <enter>
		$5F =? ( rot 1+ rot rot ) | $5f _
		drop ) 2drop ;

:cntcol | adr -- c
	1 1 rot ( c@+ 1? )(
		$5F =? ( 10 nip ) | $5f _
		10 =? ( drop >r max 1 r> dup ) | <enter>
		drop
		swap 1+ swap ) 2drop
	max ;

:sizeline | adr -- cc
	0 swap
	( c@+ 1? )( $5F =? ( 10 nip ) 10 =? ( 2drop ; ) emitsize rot + swap )
	2drop ;

:lineemit
	( pcursor c@+ 1? )( $5F =? ( 10 nip ) 10 =? ( drop ; ) emitf ) drop ;

#padx #pady

:boxprintl | adr --
	dup cntlin
	( 1? )( 1-
		tx1 padx + 'ccx !
		swap lineemit swap cr
		) 2drop ;

:boxprintc | adr --
	dup cntlin
	( 1? )( 1-
		over sizeline
		tx1 tx2 + 2/ swap 2/ - padx + 'ccx !
		swap lineemit swap cr
		) 2drop ;

:boxprintr | adr --
	dup cntlin
	( 1? )( 1-
		over sizeline
		tx2 swap - padx - 'ccx !
		swap lineemit swap cr
		) 2drop ;

#lboxp boxprintl boxprintl boxprintc boxprintr

:vup	pady ty1 + 'ccy ! ;
:vce    ty2 ty1 - 2/ pick3 cntlin cch * 2/ - pady + ty1 + 'ccy ! ;
:vdn    ty2 ty1 - pick3 cntlin cch * - pady - ty1 + 'ccy ! ;

#typad vup vce vdn vce | 0 up 1 center 2 dn 3 center

::boxprint | str n --
	dup
	$c and 'typad + @ exec
	$3 and 2 << 'lboxp + @ exec
	poli ; | cursor ultimo

::boxpad | x y --
	'pady ! 'padx ! ;

::boxplace | w h --
	cch * 2/ dup neg 'ty1 ! 'ty2 !
	ccw * 2/ dup neg 'tx1 ! 'tx2 ! ;

::boxplacec | "" -- ""
	dup cntlin cch * 2/ dup neg 'ty1 ! 'ty2 !
	dup cntcol ccw * 2/ dup neg 'tx1 ! 'tx2 ! ;
