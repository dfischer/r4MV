| r4fasmo.txt generator|-----------------------:sinp $7FFF AND $4000 - DUP DUP $10 *>> DUP $4A67B2 $10 *>> $292F99 - $10 *>> $64879 + $10 *>> ;:cos $8000 + $8000 NAND? ( sinp ; ) sinp NEG ;:sin $4000 + $8000 NAND? ( sinp ; ) sinp NEG ;#col1 $FFFFFF#col2 $0#col $FF00#mtx#mty#ma#mb#mex#mey#px#py#pxBPP#pyBPP#ymax $FFFFFFFF#segs )( $7FFF#segs> 'segs#heapseg )( $1FFF#heapcnt $0#activos )( $800#activos> 'activos#runlenscan )( $800:move ( 1? )( 1- >R @+ ROT !+ SWAP R> ) 3DROP ;:acpx!+ DUP $FF00FF AND PX@ DUP $FF00FF AND PICK2 - PICK4 * $8 >> ROT + $FF00FF AND >R SWAP $FF00 AND SWAP $FF00 AND OVER - ROT * $8 >> + $FF00 AND R> OR PX!+ ;:gr_mix >R DUP $FF00FF AND PICK2 $FF00FF AND OVER - R * $8 >> + $FF00FF AND ROT ROT $FF00 AND SWAP $FF00 AND OVER - R> * $8 >> + $FF00 AND OR ;:mixcolor $1 <? ( col2 NIP ; ) $FE >? ( col1 NIP ; ) col1 col2 ROT gr_mix ;:wvline -? ( DROP 'py ! ; ) SW >=? ( DROP 'py ! ; ) py PICK2 DUP 'py ! <? ( SWAP ROT ) -? ( 3DROP ; ) SH 1- SWAP OVER - DUP $1F >> AND + ROT SH >=? ( 3DROP ; ) DUP NEG $1F >> AND SWAP OVER - SWAP ROT SWAP SETXY 1+ ( 1? )( 1- col PX!+ SW 1- PX+! ) DROP ;:whline -? ( DROP 'px ! ; ) SH >=? ( DROP 'px ! ; ) px PICK2 DUP 'px ! <? ( SWAP ROT ) -? ( 3DROP ; ) SW SWAP OVER - DUP $1F >> AND + ROT SW >=? ( 3DROP ; ) DUP NEG $1F >> AND SWAP OVER - SWAP ROT SETXY 1+ ( 1? )( 1- col PX!+ ) DROP ;:clip1 $8 <? ( $0 )( SH $2 - ) NIP >R 2SWAP PICK3 PICK2 - R PICK3 - PICK4 PICK3 - ROT */ + NIP R> SWAP -? ( $1 )( SW >=? ( $2 )( $0 ) ) >R 2SWAP R> ;:clip2 $8 <? ( $0 )( SH $2 - ) NIP >R OVER PICK4 - OVER PICK4 - R PICK4 - SWAP ROT */ + NIP R> SWAP -? ( $1 )( SW >=? ( $2 )( $0 ) ) ;:clip3 $1 =? ( $0 )( SW 1- ) NIP >R SWAP DUP PICK4 - PICK2 PICK4 - R PICK4 - ROT ROT */ + NIP R> $0 ;:clip4 $1 =? ( $0 )( SW 1- ) NIP >R 2SWAP SWAP PICK3 OVER - PICK3 PICK3 - R PICK4 - ROT ROT */ + NIP R> 2SWAP $0 ;:clipline SH 1- >=? ( $8 )( -? ( $4 )( $0 ) ) >R SWAP SW >=? ( $2 R+ )( -? ( $1 R+ ) ) 2SWAP SH 1- >=? ( $8 )( -? ( $4 )( $0 ) ) >R SWAP SW >=? ( $2 R+ )( -? ( $1 R+ ) ) R> R> 2DUP AND 1? ( DROP OR ; ) DROP 2DUP OR 0? ( DROP OR ; ) DROP >R $C AND? ( clip2 ) R> SWAP >R $C AND? ( clip1 ) R> 2DUP AND 1? ( DROP OR ; ) DROP 2DUP OR 0? ( DROP OR ; ) DROP >R 1? ( clip4 ) R> SWAP >R 1? ( clip3 ) R> OR ;:nline21 $10 << OVER / $0 ROT ( 1? )( 1- >R OVER + $FFFF0000 AND? ( $FFFF AND PICK2 PX+! ) SW PX+! DUP $8 >> DUP col acpx!+ PICK3 1- PX+! $FF XOR col acpx!+ PICK2 NEG 1- PX+! R> ) 4DROP ;:LINE py =? ( whline ; ) SWAP px =? ( wvline ; ) SWAP px py 2OVER 'py ! 'px ! PICK2 <? ( 2SWAP ) -? ( 4DROP ; ) 2SWAP SH 1- >=? ( 4DROP ; ) clipline 1? ( 4DROP DROP ; ) DROP PICK2 - SWAP PICK3 - 0? ( 4DROP ; ) 2SWAP SWAP SETXY col PX!+ $FFFFFFFF PX+! SWAP -? ( NEG $FFFFFFFF )( $1 ) ROT ROT OVER <? ( nline21 ; ) SWAP $10 << OVER / $0 ROT ( 1? )( 1- >R OVER + $FFFF0000 AND? ( $FFFF AND SW PX+! ) PICK2 PX+! DUP $8 >> DUP col acpx!+ SW 1- PX+! $FF XOR col acpx!+ SW 1+ NEG PX+! R> ) 4DROP ;:CURVE PICK3 pxBPP + PICK2 2* - ABS PICK3 pyBPP + PICK2 2* - ABS + $4 <? ( 3DROP LINE ; ) DROP PICK3 PICK2 + 2/ PICK3 PICK2 + 2/ 2SWAP py + 2/ SWAP px + 2/ SWAP PICK3 PICK2 + 2/ PICK3 PICK2 + 2/ 2SWAP CURVE CURVE ;:runlenSolid 'runlenscan ( @+ 1? )( DUP $9 >> $7FF AND SWAP $1FF AND $100 =? ( DROP ( 1? )( 1- col PX!+ ) DROP )( 1? ( $FF XOR SWAP ( 1? )( 1- OVER col acpx!+ ) 2DROP )( DROP PX+! ) ) ) 2DROP $FFFFFFFF PX+! ;:Ldegfill ( 1? )( 1- mex $8 >> mixcolor PX!+ ma 'mex +! ) DROP ;:Ldegalpha $FF XOR SWAP ( 1? )( 1- OVER mex $8 >> mixcolor acpx!+ ma 'mex +! ) 2DROP ;:runlenLdeg mtx NEG ma * OVER $4 >> mty - mb * - 'mex ! 'runlenscan ( @+ 1? )( DUP $9 >> $7FF AND SWAP $1FF AND $100 =? ( DROP Ldegfill )( 1? ( Ldegalpha )( DROP DUP PX+! ma * 'mex +! ) ) ) 2DROP $FFFFFFFF PX+! ;:distf ABS SWAP ABS OVER <? ( SWAP ) DUP $8 << OVER $3 << + OVER $4 << - SWAP 2* - OVER $7 << + OVER $5 << - OVER $3 << + SWAP 2* - ;:Rdegfill ( 1? )( 1- mex mey distf $10 >> mixcolor PX!+ ma 'mex +! mb 'mey +! ) DROP ;:Rdegalpha $FF XOR SWAP ( 1? )( 1- OVER mex mey distf $10 >> mixcolor acpx!+ ma 'mex +! mb 'mey +! ) 2DROP ;:runlenRdeg mtx NEG ma * OVER $4 >> mty - mb * - 'mex ! mtx NEG mb * OVER $4 >> mty - ma * + 'mey ! 'runlenscan ( @+ 1? )( DUP $9 >> $7FF AND SWAP $1FF AND $100 =? ( DROP Rdegfill )( 1? ( Rdegalpha )( DROP DUP PX+! DUP ma * 'mex +! mb * 'mey +! ) ) ) 2DROP $FFFFFFFF PX+! ;#runlencover 'runlenSolid:heap! heapcnt DUP 1+ 'heapcnt ! ( 1? )( DUP 1- 2/ DUP $2 << 'heapseg + @ PICK3 <? ( 2DROP $2 << 'heapseg + ! ; ) ROT $2 << 'heapseg + ! ) DROP 'heapseg ! ;:moveDown ( heapcnt 2/ <? )( DUP 2* 1+ DUP $2 << 'heapseg + @ OVER 1+ heapcnt <? ( $2 << 'heapseg + @ >? ( DROP 1+ DUP $2 << 'heapseg + @ ) )( DROP ) PICK3 >=? ( 2DROP $2 << 'heapseg + ! ; ) ROT OVER SWAP $2 << 'heapseg + ! DROP ) $2 << 'heapseg + ! ;:heap@ heapseg heapcnt 1- $2 << 'heapseg + @ $0 moveDown heapcnt 1- 0? ( $FFFFFFFF 'heapseg ! ) 'heapcnt ! ;:PLINEI pyBPP =? ( DROP 'pxBPP ! ; ) pxBPP pyBPP 2OVER 'pyBPP ! 'pxBPP ! PICK2 >? ( 2SWAP ) SH $4 << >=? ( 4DROP ; ) ROT $0 <=? ( 4DROP ; ) ymax >? ( DUP 'ymax ! ) >R >R $8 << SWAP $8 << OVER - R> R OVER - ROT SWAP / SWAP -? ( NEG OVER * ROT + SWAP $0 ) DUP $10 << segs> 'segs - $4 >> OR heap! segs> !+ ROT PICK2 2/ + SWAP !+ !+ R> SWAP !+ 'segs> ! ;:searchscan ( @+ 1? )( $14 >> $FFF AND PICK2 >? ( DROP $8 - ; ) DROP ) DROP $8 - ;:inserta1 >R R@+ ( R @ 1? )( SWAP R!+ ) SWAP R!+ R> ! ;:inserta2 >R R@+ DUP ( R @ 1? )( ROT R!+ ) ROT R!+ SWAP R!+ R> ! ;:add.1 DUP >R @ DUP $9 >> $7FF AND $1 =? ( DROP NIP + R!+ R> ; ) DROP SWAP OVER $14 >> $FFF AND =? ( R inserta1 DROP SWAP OVER $FFF001FF AND + $200 OR R!+ $100000 + $200 - R ! R> ; ) R 4+ @ $14 >> $FFF AND 1- =? ( R inserta1 OVER $200 - R!+ $14 << $200 OR SWAP $1FF AND ROT + OR R!+ R> ; ) R inserta2 OVER $FFF001FF AND OVER PICK3 $14 >> $FFF AND - $9 << OR R!+ ROT PICK2 $1FF AND + $200 OR OVER $14 << OR R!+ 1+ R @ DUP $14 >> $FFF AND SWAP $9 >> $7FF AND + OVER - $9 << SWAP $14 << OR SWAP $1FF AND OR R ! R> ;:add.len >R $1 =? ( DROP $10 SWAP R> add.1 ; ) R @ $9 >> $7FF AND OVER >? ( R inserta1 PICK2 $14 << PICK2 $9 << OR R @ $1FF AND $10 + OR R!+ OVER - $9 << ROT ROT + $14 << OR R @ $1FF AND OR R ! R> ; ) OVER <? ( R @ $10 + R!+ ROT OVER + ROT ROT - R> add.len ; ) 3DROP R @ $10 + R!+ R> ;:coverpixels >R OVER $4 >> -? ( 3DROP R> ; ) OVER $4 >> SW >=? ( 4DROP R> ; ) R> searchscan >R OVER =? ( NIP ROT $F AND ROT $F AND - 1? ( SWAP R> add.1 ; ) 2DROP R> ; ) +? ( ROT $F AND $10 SWAP - OVER R> add.1 >R 1+ SW >=? ( 3DROP R> ; ) )( DROP NIP $0 RDROP 'runlenscan >R ) SWAP SW >? ( SW PICK2 - )( DUP PICK2 - ) $0 >? ( ROT SWAP R> add.len >R )( DROP NIP ) SW <? ( SWAP $F AND 1? ( SWAP R> add.1 ; ) ) 2DROP R> ;:fillcover 'runlenscan >R 'activos ( activos> $4 - <? )( @+ 4+ @ $8 >> SWAP @+ 4+ @ $8 >> ROT R> coverpixels >R ) DROP RDROP ;:activosort ( 'activos >? )( $4 - DUP @ DUP 4+ @ PICK3 <? ( 2DROP NIP 4+ ! ; ) DROP OVER 4+ ! ) NIP ! ;:deletecopy DUP 4+ ( activos> <? )( @+ DUP $C + @ PICK4 >? ( DROP ROT !+ SWAP )( 2DROP ) ) DROP 'activos> ! ;:deleteline 'activos ( activos> <? )( DUP @ $C + @ PICK2 =? ( DROP deletecopy ; ) DROP 4+ ) DROP ;:POLI ymax -? ( DROP 'segs 'segs> ! $FFFFFFFF 'ymax ! $0 'heapcnt ! ; ) SH $4 << >? ( SH $4 << 'ymax ! ) DROP 'activos 'activos> ! heapseg $10 >> DUP $0 OVER $4 >> SETXY ( ymax <? )( $0 SW 1+ $9 << 'runlenscan !+ ! $10 ( 1? )( 1- >R ( OVER =? )( NIP heap@ $FFFF AND $4 << 'segs + DUP 4+ @ activos> DUP 4+ 'activos> ! activosort heapseg $10 >> SWAP ) fillcover 1+ deleteline 'activos ( activos> <? )( DUP @ DUP 4+ @+ SWAP @ + DUP PICK2 4+ ! PICK2 activosort 4+ ) DROP R> ) DROP runlencover EXEC ) 2DROP 'segs 'segs> ! $FFFFFFFF 'ymax ! $0 'heapcnt ! ;:PCURVEI PICK3 pxBPP + PICK2 2* - ABS PICK3 pyBPP + PICK2 2* - ABS + $18 <? ( 3DROP PLINEI ; ) DROP PICK3 PICK2 + 2/ PICK3 PICK2 + 2/ 2SWAP pyBPP + 2/ SWAP pxBPP + 2/ SWAP PICK3 PICK2 + 2/ PICK3 PICK2 + 2/ 2SWAP PCURVEI PCURVEI ;:PCURVE >R >R >R $4 << R> $4 << R> $4 << R> $4 << PCURVEI ;#seed $1D827B41#xc#yc#w#h#tx1 $0#ty1 $0#tx2 $280#ty2 $1E0#ccx $0#ccy $0:gc2win w xc OVER 2/ - DUP 'tx1 ! + 'tx2 ! h yc OVER 2/ - DUP 'ty1 ! + 'ty2 ! ;:scr SW DUP DUP 'tx2 ! 'w ! 2/ 'xc ! SH DUP DUP 'ty2 ! 'h ! 2/ 'yc ! $0 DUP 'tx1 ! 'ty1 ! ;:?ukey $80 OR KEY =? ( DROP EXEC ; ) 2DROP ;:?key KEY =? ( DROP EXEC ; ) 2DROP ;#here $0#memmap )( $400#memmap> 'memmap:empty memmap> 'memmap =? ( MEM NIP )( $4 - DUP 'memmap> ! @ ) 'here ! ;:,w here SWAP ( C@+ $FF AND $20 >? )( ROT C!+ SWAP ) 2DROP 'here ! ;:c0 SWAP 0? ( DROP ; ) ( C@+ 1? )( $7C =? ( 2DROP ; ) $7E =? ( 2DROP ; ) here C!+ 'here ! ) 2DROP ;:c1 SWAP 0? ( DROP ; ) ( C@+ 1? )( $5F =? ( 2DROP ; ) $7C =? ( 2DROP ; ) $7E =? ( 2DROP ; ) here C!+ 'here ! ) 2DROP ;#mbuff $0 $0 $0 $0 $0 $0 $0 $0 $0:,b 'mbuff $22 + SWAP ( DUP $1 AND $30 + PICK2 C! SWAP 1- SWAP 2/ $7FFFFFFF AND 0? ) DROP 1+ here SWAP ( C@+ 1? )( ROT C!+ SWAP ) 2DROP 'here ! ;:c2 SWAP ,b ;:c3 SWAP 0? ( DROP ; ) here SWAP ( C@+ 1? )( ROT C!+ SWAP ) 2DROP 'here ! ;:,d -? ( NEG -? ( DROP "-2147483648" here SWAP ( C@+ 1? )( ROT C!+ SWAP ) 2DROP 'here ! ; ) $2D here C!+ 'here ! ) 'mbuff $22 + SWAP ( $A /MOD $30 + PICK2 C! SWAP 1- SWAP 0? ) DROP 1+ here SWAP ( C@+ 1? )( ROT C!+ SWAP ) 2DROP 'here ! ;:c4 SWAP ,d ;:c5 $25 here C!+ 'here ! ;:,df 'mbuff $22 + SWAP ( $A /MOD $30 + PICK2 C! SWAP 1- SWAP 0? ) DROP $2 + here SWAP ( C@+ 1? )( ROT C!+ SWAP ) 2DROP 'here ! ;:,f -? ( NEG $2D here C!+ 'here ! ) DUP $10 >> ,d $2E here C!+ 'here ! $FFFF AND $2710 $10 *>> $2710 + ,df ;:c6 SWAP ,f ;:c7 SWAP 0? ( DROP ; ) ,w ;:,h 'mbuff $22 + SWAP ( DUP $F AND $30 + $39 >? ( $7 + ) PICK2 C! SWAP 1- SWAP $4 >> $FFFFFFF AND 0? ) DROP 1+ here SWAP ( C@+ 1? )( ROT C!+ SWAP ) 2DROP 'here ! ;:c8 SWAP ,h ;:c9 SWAP $10 >> ,d ;:ca SWAP $FFFF AND ,d ;:cb SWAP here C!+ 'here ! ;:cc SWAP 0? ( DROP ; ) ( C@+ 1? )( $D =? ( 2DROP ; ) here C!+ 'here ! ) 2DROP ;:cd ;:ce $D here C!+ 'here ! ;:,o -? ( NEG -? ( $0 NIP ) $2D here C!+ 'here ! ) 'mbuff $22 + SWAP ( DUP $7 AND $30 + PICK2 C! SWAP 1- SWAP $3 >> 0? ) DROP 1+ here SWAP ( C@+ 1? )( ROT C!+ SWAP ) 2DROP 'here ! ;:cf SWAP ,o ;#control 'c0 'c1 'c2 'c3 'c4 'c5 'c6 'c7 'c8 'c9 'ca 'cb 'cc 'cd 'ce 'cf:,emit $25 <>? ( here C!+ 'here ! ; ) DROP C@+ $F AND $2 << 'control + @ EXEC ;#b1 )( $1000#b2 )( $1000:mprint here 0? ( MEM DUP 'here ! NIP ) memmap> !+ 'memmap> ! 'b1 =? ( 'b2 )( 'b1 ) DUP 'here ! >R ( C@+ 1? )( ,emit ) here C!+ 'here ! DROP empty R> ;#xf#yf#ox#oy#mati $10000 $0 $0 $0 $0 $10000 $0 $0 $0 $0 $10000 $0 $0 $0 $0 $10000#mats )( $500#mat> 'mats:mtrans mat> >R PICK2 R $30 + @ $10 *>> R @ + R!+ PICK2 R $30 + @ $10 *>> R @ + R!+ PICK2 R $30 + @ $10 *>> R @ + R!+ ROT R @ + R!+ OVER R $20 + @ $10 *>> R @ + R!+ OVER R $20 + @ $10 *>> R @ + R!+ OVER R $20 + @ $10 *>> R @ + R!+ SWAP R @ + R!+ DUP R $10 + @ $10 *>> R @ + R!+ DUP R $10 + @ $10 *>> R @ + R!+ DUP R $10 + @ $10 *>> R @ + R!+ R> +! ;:mtransi mat> >R PICK2 R@+ $10 *>> PICK2 R@+ $10 *>> + OVER R@+ $10 *>> + R @ + R!+ PICK2 R@+ $10 *>> PICK2 R@+ $10 *>> + OVER R@+ $10 *>> + R @ + R!+ ROT R@+ $10 *>> ROT R@+ $10 *>> + SWAP R@+ $10 *>> + R @ + R> ! ;:mscalei mat> >R PICK2 R @ $10 *>> R!+ OVER R @ $10 *>> R!+ DUP R @ $10 *>> R!+ $4 R+ PICK2 R @ $10 *>> R!+ OVER R @ $10 *>> R!+ DUP R @ $10 *>> R!+ $4 R+ ROT R @ $10 *>> R!+ SWAP R @ $10 *>> R!+ R @ $10 *>> R> ! ;:mrotx mat> $10 + >R DUP sin SWAP cos R @ R $10 + @ PICK2 PICK2 $10 *>> PICK4 PICK2 $10 *>> + R!+ PICK2 $10 *>> >R PICK2 NEG $10 *>> R> + R $C + ! R @ R $10 + @ PICK2 PICK2 $10 *>> PICK4 PICK2 $10 *>> + R!+ PICK2 $10 *>> >R PICK2 NEG $10 *>> R> + R $C + ! R @ R $10 + @ PICK2 PICK2 $10 *>> PICK4 PICK2 $10 *>> + R!+ PICK2 $10 *>> >R PICK2 NEG $10 *>> R> + R $C + ! R @ R $10 + @ PICK2 PICK2 $10 *>> PICK4 PICK2 $10 *>> + R!+ ROT $10 *>> >R $10 *>> R> + R> $C + ! ;:mroty mat> >R DUP sin SWAP cos R @ R $20 + @ PICK2 PICK2 $10 *>> PICK4 PICK2 $10 *>> + R!+ PICK2 $10 *>> >R PICK2 NEG $10 *>> R> + R $1C + ! R @ R $20 + @ PICK2 PICK2 $10 *>> PICK4 PICK2 $10 *>> + R!+ PICK2 $10 *>> >R PICK2 NEG $10 *>> R> + R $1C + ! R @ R $20 + @ PICK2 PICK2 $10 *>> PICK4 PICK2 $10 *>> + R!+ PICK2 $10 *>> >R PICK2 NEG $10 *>> R> + R $1C + ! R @ R $20 + @ PICK2 PICK2 $10 *>> PICK4 PICK2 $10 *>> + R!+ ROT $10 *>> >R SWAP NEG $10 *>> R> + R> $1C + ! ;:transform mat> >R PICK2 R@+ $10 *>> PICK2 R@+ $10 *>> + OVER R@+ $10 *>> + R@+ + R> SWAP >R >R PICK2 R@+ $10 *>> PICK2 R@+ $10 *>> + OVER R@+ $10 *>> + R@+ + R> SWAP >R >R ROT R@+ $10 *>> ROT R@+ $10 *>> + SWAP R@+ $10 *>> + R> @ + R> R> SWAP ROT ;:Omode SW DUP 2/ 'ox ! SH DUP 2/ 'oy ! OVER - DUP $1F >> AND + DUP 'xf ! 'yf ! 'mats DUP 'mat> ! 'mati $10 move ;:project3d transform 0? ( 3DROP ox oy ; ) >R yf R */ oy + SWAP xf R> */ ox + SWAP ;#c1#ycen#xcen#xcc#ycc:a0 DROP ;:ab $4 >> 'col ! ;:ac $4 >> 'c1 ! ;:ad $4 >> 'col ! 'runlenSolid 'runlencover ! POLI ;:ae $4 >> c1 'col2 ! 'col1 ! 'runlenLdeg 'runlencover ! POLI ;:af $4 >> c1 'col2 ! 'col1 ! 'runlenRdeg 'runlencover ! POLI ;:3d>xy DUP $12 >> $3 << SWAP $E << $12 >> $3 << $0 project3d ;:ad1 3d>xy 2DUP $4 << 'pyBPP ! $4 << 'pxBPP ! 'py ! 'px ! ;:ad2 3d>xy 'ycc ! 'xcc ! ;:ad3 3d>xy $4 << SWAP $4 << SWAP PLINEI ;:ad4 3d>xy xcc ycc PCURVE ;:ad5 3d>xy LINE ;:ad6 3d>xy xcc ycc CURVE ;:ad7 3d>xy 2DUP 'ycen !+ ! 'mty ! 'mtx ! ;:ad8 3d>xy xcen ROT - ycen ROT - OVER DUP * OVER DUP * + $1 OVER SWAP - DUP $1F >> AND - >R SWAP NEG R $10 <</ SWAP R> $10 <</ 'mb ! 'ma ! ;:ad9 3d>xy xcc ycc PCURVE ;:ada 3d>xy $4 << SWAP $4 << SWAP PLINEI ;#nsp3d 'a0 'ad1 'ad2 'ad3 'ad4 'ad5 'ad6 'ad7 'ad8 'ad9 'ada 'ab 'ac 'ad 'ae 'af:3dnsprite ( @+ 1? )( DUP $F AND $2 << 'nsp3d + @ EXEC ) 2DROP 'runlenSolid 'runlencover ! ;#rom8x12 ( $0 $AA $0 $82 $0 $82 $0 $82 $0 $AA $0 $0 $0 $0 $10 $38 $7C $FE $7C $38 $10 $0 $0 $0 $55 $AA $55 $AA $55 $AA $55 $AA $55 $AA $55 $AA $0 $A0 $A0 $E0 $A0 $AE $4 $4 $4 $4 $0 $0 $0 $E0 $80 $C0 $80 $8E $8 $C $8 $8 $0 $0 $0 $60 $80 $80 $80 $6C $A $C $A $A $0 $0 $0 $80 $80 $80 $80 $EE $8 $C $8 $8 $0 $0 $0 $18 $24 $24 $18 $0 $0 $0 $0 $0 $0 $0 $0 $0 $10 $10 $7C $10 $10 $0 $7C $0 $0 $0 $0 $C0 $A0 $A0 $A0 $A8 $8 $8 $8 $E $0 $0 $0 $88 $88 $50 $50 $2E $4 $4 $4 $4 $0 $0 $10 $10 $10 $10 $10 $F0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $F0 $10 $10 $10 $10 $10 $10 $0 $0 $0 $0 $0 $1F $10 $10 $10 $10 $10 $10 $10 $10 $10 $10 $10 $1F $0 $0 $0 $0 $0 $0 $10 $10 $10 $10 $10 $FF $10 $10 $10 $10 $10 $10 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $FF $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $FF $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $FF $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $FF $10 $10 $10 $10 $10 $1F $10 $10 $10 $10 $10 $10 $10 $10 $10 $10 $10 $F0 $10 $10 $10 $10 $10 $10 $10 $10 $10 $10 $10 $FF $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $FF $10 $10 $10 $10 $10 $10 $10 $10 $10 $10 $10 $10 $10 $10 $10 $10 $10 $10 $0 $0 $0 $E $30 $C0 $30 $E $0 $FE $0 $0 $0 $0 $0 $E0 $18 $6 $18 $E0 $0 $FE $0 $0 $0 $0 $0 $0 $FE $44 $44 $44 $44 $44 $0 $0 $0 $0 $4 $4 $7E $8 $10 $7E $20 $20 $0 $0 $0 $1C $22 $20 $70 $20 $20 $20 $62 $DC $0 $0 $0 $0 $0 $0 $0 $18 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $10 $10 $10 $10 $10 $10 $10 $0 $10 $0 $0 $0 $24 $24 $24 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $24 $24 $7E $24 $7E $24 $24 $0 $0 $0 $0 $10 $3C $50 $50 $38 $14 $14 $78 $10 $0 $0 $0 $22 $52 $24 $8 $8 $10 $24 $2A $44 $0 $0 $0 $0 $0 $30 $48 $48 $30 $4A $44 $3A $0 $0 $0 $10 $10 $10 $0 $0 $0 $0 $0 $0 $0 $0 $0 $4 $8 $8 $10 $10 $10 $8 $8 $4 $0 $0 $0 $20 $10 $10 $8 $8 $8 $10 $10 $20 $0 $0 $0 $24 $18 $7E $18 $24 $0 $0 $0 $0 $0 $0 $0 $0 $0 $10 $10 $7C $10 $10 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $38 $30 $40 $0 $0 $0 $0 $0 $0 $7C $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $10 $38 $10 $0 $0 $2 $2 $4 $8 $10 $20 $40 $80 $80 $0 $0 $0 $18 $24 $42 $42 $42 $42 $42 $24 $18 $0 $0 $0 $10 $30 $50 $10 $10 $10 $10 $10 $7C $0 $0 $0 $3C $42 $42 $2 $4 $18 $20 $40 $7E $0 $0 $0 $7E $2 $4 $8 $1C $2 $2 $42 $3C $0 $0 $0 $4 $C $14 $24 $44 $44 $7E $4 $4 $0 $0 $0 $7E $40 $40 $5C $62 $2 $2 $42 $3C $0 $0 $0 $1C $20 $40 $40 $5C $62 $42 $42 $3C $0 $0 $0 $7E $2 $4 $8 $8 $10 $10 $20 $20 $0 $0 $0 $3C $42 $42 $42 $3C $42 $42 $42 $3C $0 $0 $0 $3C $42 $42 $46 $3A $2 $2 $4 $38 $0 $0 $0 $0 $0 $10 $38 $10 $0 $0 $10 $38 $10 $0 $0 $0 $0 $10 $38 $10 $0 $0 $38 $30 $40 $0 $0 $2 $4 $8 $10 $20 $10 $8 $4 $2 $0 $0 $0 $0 $0 $0 $7E $0 $0 $7E $0 $0 $0 $0 $0 $40 $20 $10 $8 $4 $8 $10 $20 $40 $0 $0 $0 $3C $42 $42 $2 $4 $8 $8 $0 $8 $0 $0 $0 $3C $42 $42 $4E $52 $56 $4A $40 $3C $0 $0 $0 $18 $24 $42 $42 $42 $7E $42 $42 $42 $0 $0 $0 $78 $44 $42 $44 $78 $44 $42 $44 $78 $0 $0 $0 $3C $42 $40 $40 $40 $40 $40 $42 $3C $0 $0 $0 $78 $44 $42 $42 $42 $42 $42 $44 $78 $0 $0 $0 $7E $40 $40 $40 $78 $40 $40 $40 $7E $0 $0 $0 $7E $40 $40 $40 $78 $40 $40 $40 $40 $0 $0 $0 $3C $42 $40 $40 $40 $4E $42 $46 $3A $0 $0 $0 $42 $42 $42 $42 $7E $42 $42 $42 $42 $0 $0 $0 $7C $10 $10 $10 $10 $10 $10 $10 $7C $0 $0 $0 $1F $4 $4 $4 $4 $4 $4 $44 $38 $0 $0 $0 $42 $44 $48 $50 $60 $50 $48 $44 $42 $0 $0 $0 $40 $40 $40 $40 $40 $40 $40 $40 $7E $0 $0 $0 $82 $82 $C6 $AA $92 $92 $82 $82 $82 $0 $0 $0 $42 $42 $62 $52 $4A $46 $42 $42 $42 $0 $0 $0 $3C $42 $42 $42 $42 $42 $42 $42 $3C $0 $0 $0 $7C $42 $42 $42 $7C $40 $40 $40 $40 $0 $0 $0 $3C $42 $42 $42 $42 $42 $52 $4A $3C $2 $0 $0 $7C $42 $42 $42 $7C $50 $48 $44 $42 $0 $0 $0 $3C $42 $40 $40 $3C $2 $2 $42 $3C $0 $0 $0 $FE $10 $10 $10 $10 $10 $10 $10 $10 $0 $0 $0 $42 $42 $42 $42 $42 $42 $42 $42 $3C $0 $0 $0 $82 $82 $44 $44 $44 $28 $28 $28 $10 $0 $0 $0 $82 $82 $82 $82 $92 $92 $92 $AA $44 $0 $0 $0 $82 $82 $44 $28 $10 $28 $44 $82 $82 $0 $0 $0 $82 $82 $44 $28 $10 $10 $10 $10 $10 $0 $0 $0 $7E $2 $4 $8 $10 $20 $40 $40 $7E $0 $0 $0 $3C $20 $20 $20 $20 $20 $20 $20 $3C $0 $0 $0 $80 $80 $40 $20 $10 $8 $4 $2 $2 $0 $0 $0 $78 $8 $8 $8 $8 $8 $8 $8 $78 $0 $0 $0 $10 $28 $44 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $FE $0 $10 $8 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $3C $2 $3E $42 $46 $3A $0 $0 $0 $40 $40 $40 $5C $62 $42 $42 $62 $5C $0 $0 $0 $0 $0 $0 $3C $42 $40 $40 $42 $3C $0 $0 $0 $2 $2 $2 $3A $46 $42 $42 $46 $3A $0 $0 $0 $0 $0 $0 $3C $42 $7E $40 $42 $3C $0 $0 $0 $1C $22 $20 $20 $7C $20 $20 $20 $20 $0 $0 $0 $0 $0 $0 $3A $44 $44 $38 $40 $3C $42 $3C $0 $40 $40 $40 $5C $62 $42 $42 $42 $42 $0 $0 $0 $0 $10 $0 $30 $10 $10 $10 $10 $7C $0 $0 $0 $0 $4 $0 $C $4 $4 $4 $4 $44 $44 $38 $0 $40 $40 $40 $44 $48 $70 $48 $44 $42 $0 $0 $0 $30 $10 $10 $10 $10 $10 $10 $10 $7C $0 $0 $0 $0 $0 $0 $EC $92 $92 $92 $92 $82 $0 $0 $0 $0 $0 $0 $5C $62 $42 $42 $42 $42 $0 $0 $0 $0 $0 $0 $3C $42 $42 $42 $42 $3C $0 $0 $0 $0 $0 $0 $5C $62 $42 $62 $5C $40 $40 $40 $0 $0 $0 $0 $3A $46 $42 $46 $3A $2 $2 $2 $0 $0 $0 $0 $5C $22 $20 $20 $20 $20 $0 $0 $0 $0 $0 $0 $3C $42 $30 $C $42 $3C $0 $0 $0 $0 $20 $20 $7C $20 $20 $20 $22 $1C $0 $0 $0 $0 $0 $0 $44 $44 $44 $44 $44 $3A $0 $0 $0 $0 $0 $0 $44 $44 $44 $28 $28 $10 $0 $0 $0 $0 $0 $0 $82 $82 $92 $92 $AA $44 $0 $0 $0 $0 $0 $0 $42 $24 $18 $18 $24 $42 $0 $0 $0 $0 $0 $0 $42 $42 $42 $46 $3A $2 $42 $3C $0 $0 $0 $0 $7E $4 $8 $10 $20 $7E $0 $0 $0 $E $10 $10 $8 $30 $8 $10 $10 $E $0 $0 $0 $10 $10 $10 $10 $10 $10 $10 $10 $10 $0 $0 $0 $70 $8 $8 $10 $C $10 $8 $8 $70 $0 $0 $0 $24 $54 $48 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $10 $0 $10 $10 $10 $10 $10 $10 $10 $0 $0 $0 $10 $38 $54 $50 $50 $54 $38 $10 $0 $0 $0 $0 $1C $22 $20 $70 $20 $20 $20 $62 $DC $0 $0 $0 $0 $0 $42 $3C $24 $24 $3C $42 $0 $0 $0 $0 $82 $82 $44 $28 $7C $10 $7C $10 $10 $0 $0 $0 $10 $10 $10 $10 $0 $10 $10 $10 $10 $0 $0 $18 $24 $20 $18 $24 $24 $18 $4 $24 $18 $0 $0 $24 $24 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $38 $44 $92 $AA $A2 $AA $92 $44 $38 $0 $0 $0 $0 $38 $4 $3C $44 $3C $0 $7C $0 $0 $0 $0 $0 $0 $12 $24 $48 $90 $48 $24 $12 $0 $0 $0 $0 $0 $0 $0 $0 $7E $2 $2 $2 $0 $0 $0 $0 $0 $0 $0 $0 $3C $0 $0 $0 $0 $0 $0 $38 $44 $92 $AA $AA $B2 $AA $44 $38 $0 $0 $0 $0 $7E $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $18 $24 $24 $18 $0 $0 $0 $0 $0 $0 $0 $0 $0 $10 $10 $7C $10 $10 $0 $7C $0 $0 $0 $30 $48 $8 $30 $40 $78 $0 $0 $0 $0 $0 $0 $30 $48 $10 $8 $48 $30 $0 $0 $0 $0 $0 $0 $8 $10 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $42 $42 $42 $42 $66 $5A $40 $0 $0 $3E $74 $74 $74 $34 $14 $14 $14 $14 $0 $0 $0 $0 $0 $0 $0 $18 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $8 $18 $20 $60 $20 $20 $20 $70 $0 $0 $0 $0 $0 $0 $0 $30 $48 $48 $30 $0 $78 $0 $0 $0 $0 $0 $0 $0 $90 $48 $24 $12 $24 $48 $90 $0 $0 $0 $40 $C0 $40 $40 $42 $E6 $A $12 $1A $6 $0 $0 $40 $C0 $40 $40 $4C $F2 $2 $C $10 $1E $0 $0 $60 $90 $20 $10 $92 $66 $A $12 $1A $6 $0 $0 $0 $10 $0 $10 $10 $20 $40 $42 $42 $3C $0 $0 $10 $8 $0 $18 $24 $42 $42 $7E $42 $42 $0 $0 $FF $FF $FF $FF $FF $FF $FF $FF $FF $FF $FF $FF $0 $10 $0 $10 $10 $10 $10 $10 $10 $10 $0 $0 $0 $10 $38 $54 $50 $50 $54 $38 $10 $0 $0 $0 $0 $1C $22 $20 $70 $20 $20 $20 $62 $DC $0 $0 $0 $0 $0 $42 $3C $24 $24 $3C $42 $0 $0 $0 $0 $82 $82 $44 $28 $7C $10 $7C $10 $10 $0 $0 $0 $10 $10 $10 $10 $0 $10 $10 $10 $10 $0 $0 $18 $24 $20 $18 $24 $24 $18 $4 $24 $18 $0 $0 $24 $24 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $38 $44 $92 $AA $A2 $AA $92 $44 $38 $0 $0 $0 $0 $38 $4 $3C $44 $3C $0 $7C $0 $0 $0 $0 $0 $0 $12 $24 $48 $90 $48 $24 $12 $0 $0 $0 $0 $0 $0 $0 $0 $7E $2 $2 $2 $0 $0 $0 $0 $0 $0 $0 $0 $3C $0 $0 $0 $0 $0 $0 $38 $44 $92 $AA $AA $B2 $AA $44 $38 $0 $0 $0 $0 $7E $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $18 $24 $24 $18 $0 $0 $0 $0 $0 $0 $0 $0 $0 $10 $10 $7C $10 $10 $0 $7C $0 $0 $0 $30 $48 $8 $30 $40 $78 $0 $0 $0 $0 $0 $0 $30 $48 $10 $8 $48 $30 $0 $0 $0 $0 $0 $0 $8 $10 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $42 $42 $42 $42 $66 $5A $40 $0 $0 $3E $74 $74 $74 $34 $14 $14 $14 $14 $0 $0 $0 $0 $0 $0 $0 $18 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $8 $18 $20 $60 $20 $20 $20 $70 $0 $0 $0 $0 $0 $0 $0 $30 $48 $48 $30 $0 $78 $0 $0 $0 $0 $0 $0 $0 $90 $48 $24 $12 $24 $48 $90 $0 $0 $0 $40 $C0 $40 $40 $42 $E6 $A $12 $1A $6 $0 $0 $40 $C0 $40 $40 $4C $F2 $2 $C $10 $1E $0 $0 $60 $90 $20 $10 $92 $66 $A $12 $1A $6 $0 $0 $0 $10 $0 $10 $10 $20 $40 $42 $42 $3C $0 $0 $10 $8 $0 $18 $24 $42 $42 $7E $42 $42 $0 $0 $8 $10 $0 $18 $24 $42 $42 $7E $42 $42 $0 $0 $18 $24 $0 $18 $24 $42 $42 $7E $42 $42 $0 $0 $32 $4C $0 $18 $24 $42 $42 $7E $42 $42 $0 $0 $24 $24 $0 $18 $24 $42 $42 $7E $42 $42 $0 $0 $18 $24 $18 $18 $24 $42 $42 $7E $42 $42 $0 $0 $0 $6E $90 $90 $90 $9C $F0 $90 $90 $9E $0 $0 $0 $3C $42 $40 $40 $40 $40 $40 $42 $3C $8 $10 $10 $8 $0 $7E $40 $40 $78 $40 $40 $7E $0 $0 $8 $10 $0 $7E $40 $40 $78 $40 $40 $7E $0 $0 $18 $24 $0 $7E $40 $40 $78 $40 $40 $7E $0 $0 $24 $24 $0 $7E $40 $40 $78 $40 $40 $7E $0 $0 $20 $10 $0 $7C $10 $10 $10 $10 $10 $7C $0 $0 $8 $10 $0 $7C $10 $10 $10 $10 $10 $7C $0 $0 $18 $24 $0 $7C $10 $10 $10 $10 $10 $7C $0 $0 $44 $44 $0 $7C $10 $10 $10 $10 $10 $7C $0 $0 $0 $78 $44 $42 $42 $E2 $42 $42 $44 $78 $0 $0 $64 $98 $0 $82 $C2 $A2 $92 $8A $86 $82 $0 $0 $20 $10 $0 $7C $82 $82 $82 $82 $82 $7C $0 $0 $8 $10 $0 $7C $82 $82 $82 $82 $82 $7C $0 $0 $18 $24 $0 $7C $82 $82 $82 $82 $82 $7C $0 $0 $64 $98 $0 $7C $82 $82 $82 $82 $82 $7C $0 $0 $44 $44 $0 $7C $82 $82 $82 $82 $82 $7C $0 $0 $0 $0 $0 $42 $24 $18 $18 $24 $42 $0 $0 $0 $2 $3C $46 $4A $4A $52 $52 $52 $62 $3C $40 $0 $20 $10 $0 $42 $42 $42 $42 $42 $42 $3C $0 $0 $8 $10 $0 $42 $42 $42 $42 $42 $42 $3C $0 $0 $18 $24 $0 $42 $42 $42 $42 $42 $42 $3C $0 $0 $24 $24 $0 $42 $42 $42 $42 $42 $42 $3C $0 $0 $8 $10 $0 $44 $44 $28 $10 $10 $10 $10 $0 $0 $0 $40 $7C $42 $42 $42 $7C $40 $40 $40 $0 $0 $0 $38 $44 $44 $48 $50 $4C $42 $42 $5C $0 $0 $0 $10 $8 $0 $3C $2 $3E $42 $46 $3A $0 $0 $0 $4 $8 $0 $3C $2 $3E $42 $46 $3A $0 $0 $0 $18 $24 $0 $3C $2 $3E $42 $46 $3A $0 $0 $0 $32 $4C $0 $3C $2 $3E $42 $46 $3A $0 $0 $0 $24 $24 $0 $3C $2 $3E $42 $46 $3A $0 $0 $18 $24 $18 $0 $3C $2 $3E $42 $46 $3A $0 $0 $0 $0 $0 $0 $6C $12 $7C $90 $92 $6C $0 $0 $0 $0 $0 $0 $3C $42 $40 $40 $42 $3C $8 $10 $0 $10 $8 $0 $3C $42 $7E $40 $42 $3C $0 $0 $0 $8 $10 $0 $3C $42 $7E $40 $42 $3C $0 $0 $0 $18 $24 $0 $3C $42 $7E $40 $42 $3C $0 $0 $0 $24 $24 $0 $3C $42 $7E $40 $42 $3C $0 $0 $0 $20 $10 $0 $30 $10 $10 $10 $10 $7C $0 $0 $0 $10 $20 $0 $30 $10 $10 $10 $10 $7C $0 $0 $0 $30 $48 $0 $30 $10 $10 $10 $10 $7C $0 $0 $0 $48 $48 $0 $30 $10 $10 $10 $10 $7C $0 $0 $24 $18 $28 $4 $3C $42 $42 $42 $42 $3C $0 $0 $0 $32 $4C $0 $5C $62 $42 $42 $42 $42 $0 $0 $0 $20 $10 $0 $3C $42 $42 $42 $42 $3C $0 $0 $0 $8 $10 $0 $3C $42 $42 $42 $42 $3C $0 $0 $0 $18 $24 $0 $3C $42 $42 $42 $42 $3C $0 $0 $0 $32 $4C $0 $3C $42 $42 $42 $42 $3C $0 $0 $0 $24 $24 $0 $3C $42 $42 $42 $42 $3C $0 $0 $0 $0 $10 $10 $0 $7C $0 $10 $10 $0 $0 $0 $0 $0 $0 $2 $3C $46 $4A $52 $62 $3C $40 $0 $0 $20 $10 $0 $44 $44 $44 $44 $44 $3A $0 $0 $0 $8 $10 $0 $44 $44 $44 $44 $44 $3A $0 $0 $0 $18 $24 $0 $44 $44 $44 $44 $44 $3A $0 $0 $0 $28 $28 $0 $44 $44 $44 $44 $44 $3A $0 $0 $0 $8 $10 $0 $42 $42 $42 $46 $3A $2 $42 $3C $0 $0 $40 $40 $5C $62 $42 $42 $62 $5C $40 $40 $0 $24 $24 $0 $42 $42 $42 $46 $3A $2 $42 $3C ):charsize8i $8 NIP ;:char8i ccx ccy SETXY $3 << DUP 2/ + 'rom8x12 + SW $8 - SWAP $C ( 1? )( 1- SWAP C@+ $80 ( 1? )( OVER AND? ( col PX!+ )( $1 PX+! ) 2/ ) 2DROP PICK2 PX+! SWAP ) 3DROP ;#rows $28#cols $50#ccxmax:ccxmax! ccx ccxmax >? ( 'ccxmax ! ; ) DROP ;:emit $9 =? ( DROP ccx $FFFFFFE0 AND $20 + 'ccx ! ; ) $A =? ( DROP tx1 'ccx ! ; ) $D =? ( DROP ccxmax! $C 'ccy +! tx1 'ccx ! ; ) ccy ty2 >=? ( 2DROP ; ) DROP ccx tx2 >=? ( 2DROP ; ) DROP $FF AND DUP 'charsize8i EXEC ccx + SWAP 'char8i EXEC 'ccx ! ;:filcol ty2 ty1 - $C / 'rows ! tx2 tx1 - $8 / 'cols ! ;#lastime#.exit#foconow#lastgui $0:show MSEC DUP 'lastime !+ ! $0 '.exit ! $FFFFFFFF DUP 'foconow ! 'lastgui ! ( .exit 0? )( DROP $A UPDATE DROP R EXEC lastgui 1? ( REDRAW )( $1 'lastgui ! $FFFFFFFF 'foconow ! ) DROP ) DROP RDROP $0 DUP DUP 'lastgui ! '.exit ! KEY! ;#hot#hotnow#foco#id#idf#idl:guistart idf 'idl ! hot 'hotnow ! $0 DUP DUP 'id ! 'idf ! 'hot ! ;:exit $FFFFFFFF '.exit ! $FFFFFFFF 'foconow ! $0 'foco ! ;#oro $F99BC431 $E90B7513 $F3BBD543 $DE5B9303 $EEEBECD3 $D7EFECD3 $ECC419A3 $DA104AD3 $F21C4683 $E7F499E3 $FA206253 $FF78B9F3 $6F06033 $191CA6D3 $12B448A3 $289C4AD3 $15601783 $2A380AB3 $122BECD3 $22BFAA83 $CD3C433 $DE77963 $3BFC213 $FCCF6623 $F99BC43A $20546E37 $E30765B8 $FFFFFFC $FFCD00D $0#espada $1A08D11 $CFEB6843 $D3A71923 $E6E73933 $91879D3 $1A08D1A $B5C78D7 $DFAF5B78 $FFFFFFC $AAAAAAD $F10CAB01 $16F85353 $209868B3 $1E748483 $15E88043 $E6C99E3 $1B40DA03 $19A506F3 $F7CF7F3 $448A6B3 $FAA8C283 $F774DE53 $EF70D7E3 $F10CAB0A $1740C6D7 $F5984B68 $FFFFFFC $400FFD $0#carta $C20678D1 $C20571D3 $3DFD71D3 $3DFE78D3 $C20678DA $2E811567 $D186DAA8 $FFFFFFC $FFFFFFD $0#basto $8F6611 $22BF01A3 $446B1F93 $468B8EB3 $32C41333 $DB20F3B3 $CCB4F5D3 $C178C4A3 $D0F85133 $8F661A $3840AC17 $D4771CE8 $FFFFFFC $A601D $0#copa $C06B03C1 $C8F7C213 $F4401BC3 $F5DCCD33 $C86D02A3 $2F0902A3 $778CD33 $6F01DE3 $323FC873 $40AB03C3 $16731923 $E87F1703 $C06B03CA $2BD4DCC7 $CB3F48C8 $FFFFFFC $FF0000D $0#cartas $1 $2 $3 $4 $5 $6 $7 $A $B $C $1 $2 $3 $4 $5 $6 $7 $A $B $C $1 $2 $3 $4 $5 $6 $7 $A $B $C $1 $2 $3 $4 $5 $6 $7 $A $B $C#palos $0 $0 $0 $0 $0 $0 $0 $0 $0 $0 $1 $1 $1 $1 $1 $1 $1 $1 $1 $1 $2 $2 $2 $2 $2 $2 $2 $2 $2 $2 $3 $3 $3 $3 $3 $3 $3 $3 $3 $3:printpalo $0 =? ( "Oro" mprint ( C@+ 1? )( emit ) 2DROP DROP ; ) $1 =? ( "Copa" mprint ( C@+ 1? )( emit ) 2DROP DROP ; ) $2 =? ( "Basto" mprint ( C@+ 1? )( emit ) 2DROP DROP ; ) $3 =? ( "Espada" mprint ( C@+ 1? )( emit ) 2DROP DROP ; ) DROP ;:intercambia OVER $4 * 'cartas + @ OVER $4 * 'cartas + @ PICK3 $4 * 'cartas + ! OVER $4 * 'cartas + ! OVER $4 * 'palos + @ OVER $4 * 'palos + @ PICK3 $4 * 'palos + ! OVER $4 * 'palos + ! 2DROP ;:mezclar $0 ( $64 <? )( seed $BB40E62D * 1+ DUP 'seed ! $28 MOD ABS seed $BB40E62D * 1+ DUP 'seed ! $28 MOD ABS intercambia 1+ ) DROP ;#nombre "Tito" )( $64#c1 $E666 $0 $0 $FFFFFFFF#c2 $8000 $FFFF999A $FFFF999A $6666 $6666 $FFFFFFFF#c3 $6666 $FFFF4CCD $FFFF4CCD $0 $0 $B333 $B333 $FFFFFFFF#c4 $6666 $FFFF8000 $FFFF8000 $FFFF8000 $8000 $8000 $8000 $8000 $FFFF8000 $FFFFFFFF#c5 $8000 $FFFF8000 $FFFF8000 $FFFF8000 $8000 $8000 $8000 $8000 $FFFF8000 $FFFFFFFF#c6 $8000 $FFFF8000 $FFFF8000 $FFFF8000 $8000 $8000 $8000 $8000 $FFFF8000 $FFFFFFFF#c7 $8000 $FFFF8000 $FFFF8000 $FFFF8000 $8000 $8000 $8000 $8000 $FFFF8000 $FFFFFFFF#c8 $8000 $FFFF8000 $FFFF8000 $FFFF8000 $8000 $8000 $8000 $8000 $FFFF8000 $FFFFFFFF#c9 $8000 $FFFF8000 $FFFF8000 $FFFF8000 $8000 $8000 $8000 $8000 $FFFF8000 $FFFFFFFF#c10 $3333 $FFFF4CCD $FFFF4CCD $FFFFFFFF#c11 $3333 $FFFF4CCD $FFFF4CCD $FFFFFFFF#c12 $3333 $FFFF4CCD $FFFF4CCD $FFFFFFFF#tipos 'c1 'c2 'c3 'c4 'c5 'c6 'c7 'c8 'c9 'c10 'c11 'c12:drawcarta mat> DUP $40 + DUP 'mat> ! SWAP $10 move 'carta 3dnsprite 1- $2 << 'tipos + @ @+ DUP $0 mscalei ( @+ $FFFFFFFF <>? )( mat> DUP $40 + DUP 'mat> ! SWAP $10 move OVER @ $0 mtransi OVER 3dnsprite mat> $40 - 'mat> ! 4+ ) 3DROP mat> $40 - 'mat> ! ;#dibujos 'oro 'copa 'basto 'espada:drawcartam $4 * DUP 'palos + @ $2 << 'dibujos + @ SWAP 'cartas + @ drawcarta ;:printmazog $FFFB0000 $FFFD0000 $0 mtransi $0 $4 ( 1? )( 1- $A ( 1? )( 1- $10000 $0 $0 mtransi ROT DUP drawcartam 1+ ROT ROT ) DROP $FFF60000 $20000 $0 mtransi ) DROP ;:freelook XYMOUSE SH 2/ - $7 << SWAP SW 2/ - NEG $7 << SWAP NEG mrotx mroty ;:_aa0 mezclar ;:datos show CLS scr gc2win tx1 DUP 'ccxmax ! 'ccx ! ty1 'ccy ! filcol guistart $FF00 'col ! "Hola " mprint ( C@+ 1? )( emit ) 2DROP 'nombre mprint ( C@+ 1? )( emit ) 2DROP "!!" mprint ( C@+ 1? )( emit ) 2DROP ccxmax! $C 'ccy +! tx1 'ccx ! $0 ( $28 <? )( DUP $4 * DUP 'cartas + @ "%d de " mprint ( C@+ 1? )( emit ) 2DROP 'palos + @ printpalo ccxmax! $C 'ccy +! tx1 'ccx ! 1+ ) DROP Omode freelook $0 $0 $A0000 mtrans printmazog '_aa0 $3B ?key 'exit $1 ?ukey ;: datos ;