| :r4/menu
| PHREDA 2015
|------------------------
^r4/lib/gui.txt
^r4/lib/btn.txt
^r4/lib/input.txt
^r4/lib/codecolor.txt

|^r4/lib/rfont.txt
|^inc/rft/robotoregular.rft

^r4/lib/fontm.txt
^inc/fntm/droidsans13.txt

^r4/system/mem-ed.txt

#nfiles
#files )( 8192
#files> 'files
#files< 'files
#filen )( $3fff
#filen> 'filen
#linesv 20
#nivel 0

#pagina 0
#actual 0
#path )( 1024
#name )( 64
#source 0

#padin )( 1024
#padout

|------------------- OS DEp ---------------------
:FNAME | adr -- adrname
|WIN|	44 +
|AND|	19 +
	;

:FDIR? | adr -- 1/0
|WIN|	@ $10
|AND|	18 + c@ 4
	=? ( 1 )( 0 ) nip ;
|----------------------------------------

:FINFO | adr -- adr info
	dup FDIR? 1? ( 0 nip ; ) drop
	dup FNAME
	".txt" =pos 1? ( 2drop 1 ; ) drop
	".bmr" =pos 1? ( 2drop 2 ; ) drop
	".inc" =pos 1? ( 2drop 3 ; ) drop
	".rmt" =pos 1? ( 2drop 4 ; ) drop
	".spr" =pos 1? ( 2drop 5 ; ) drop
	".vsp" =pos 1? ( 2drop 6 ; ) drop
	7 nip ;

:files.clear
	0 'nfiles !
	'filen 'filen> !
	'files dup 'files> ! 'files< !
	;

:files!+
	files> ( files< >? )(
		4 - dup @+ swap !
		) drop
	files< !+ 'files< !
	4 'files> +!
	;

:files.free
	0 'files ( files> <? )(
		@+ pick2 >? ( swap rot )
		drop ) drop
	8 >> 'filen +
	( c@+ 1? )( drop ) drop
	'filen> !
	;

:files.getpath
	'path
	ffirst drop | quita .
	fnext drop
	( fnext 1? )(
		FINFO nivel 4 << or filen> 'filen - 8 << or
		files!+
		FNAME filen> strcpyl 'filen> !
		) drop
	files> 'files - 2 >> 'nfiles !
	;

:getname | nro -- ""
	2 << 'files + @ 8 >> 'filen + ;

:getinfo | nro -- info
	2 << 'files + @ $ff and ;

:getlvl | nro -- info
	2 << 'files + @ 4 >> $f and ;

:chginfo | nro --
	2 << 'files + dup @ $8 xor swap ! ;

:rebuild
	"r4" 'path strcpy
	files.clear
	0 'pagina !
	0 'nivel !
	files.getpath
	;

|-----------------------------
:makepath | actual nivel --
	0? ( drop getname "r4/%s" mprint 'path strcpy ; )
	over 1-
	( dup getlvl pick2 >=? )( drop 1- ) drop
	over 1- makepath drop
	"/" 'path strcat
	getname 'path strcat
	;

:expande
	0 'name !
	actual
	dup getlvl makepath

   	actual chginfo
	actual getlvl 1+ 'nivel !
    actual 1+ 2 << 'files + 'files< !
	files.getpath
	;

:remfiles
	actual chginfo
	actual getlvl 1+
	actual 1+
	( dup getlvl pick2 >=? )( drop 1+ ) drop
	nip
	actual 1+
	( swap nfiles <? )(
		dup 2 << 'files + @
		pick2 2 << 'files + !
		1+ swap 1+ ) drop
	2 << 'files + 'files> !
	files> 'files - 2 >> 'nfiles !
	files.free
	;

:contrae
	0 'name !
	'path ( c@+ 1? )( drop ) drop 1-
	( 'path >? )(
		dup c@ $2f =? ( drop 0 swap c! remfiles ; )
		drop 1- ) drop
	remfiles ;

|-------------
#pathaux )( 1024
#nameaux )( 64

:next/ | adr -- adr'
	( c@+ 1? )(
		$2f =? ( drop 0 swap 1- c!+ ; )
		drop ) nip ;

:getactual | adr actual --
	( nfiles <? )(
		dup getname pick2 =s 1? ( drop nip ; )
		drop 1+ ) nip ;


|--------------------------
:remlastpath
	'path ( c@+ 1? )( drop ) drop 1-
	( dup c@ $2f <>? )( drop 1- ) drop
	0 swap c! ;

:setactual
	actual dup getlvl makepath
	actual getinfo $7 and 1? ( remlastpath ) drop
	actual getname 'name strcpy
	;

:loadfile
	source 'name 'path "%s/%s" mprint load 0 swap ! ;

|---------------------
:loadm
	'path "mem/menu.mem" load 'path =? ( drop ; ) drop
	'path dup c@ 0? ( 2drop ; ) drop
	'pathaux strcpy
	'name 'nameaux strcpy
	0 'actual !
	'pathaux next/ 0? ( drop ; )
	( dup next/ swap | sig act
		actual getactual 'actual !
		expande
		0? ) drop
	'nameaux
	dup c@ 0? ( 2drop ; ) drop
	actual getactual
	pagina linesv + 1- >=? ( dup linesv - 1+ 'pagina ! )
	'actual !
	'nameaux 'name strcpy
	loadfile
	;

:savem
	'path 1024 64 + "mem/menu.mem" save ;

|--------------------------------------
#iconcolor $7f7f00 $3f00  $7f7f  $7f007f $7f7f00 $7f0000 $7f00  $ff $ff
#tipoext "bmr" "inc" "rmt" "spr" "vsp" "ico"


:nrun | tipo --
	'tipoext swap 2 - ( 1? )( swap >>0 swap 1- ) drop >r
	mark
	'name 'path "%s/%s" ,print
	r@ "mem/inc-%w.mem" mprint savemem
	empty
	r> "r4/system/inc-%w.txt" mprint run ;

:runfile
	actual -? ( drop ; )
	getinfo $7 and
	0? ( drop ; )
	setactual savem
	1 >? ( nrun ; )
	drop
	'name 'path "%s/%s" mprint run
	;

:runedit
	ed.load
	'name 'path "%s/%s" mprint 'ed.nombre =
	0? ( 'name 'path "%s/%s" mprint 'ed.nombre strcpy 0 'ed.ncar ! 0 'ed.ipan ! ed.save )
	drop
|win|	"r4/IDE/edit-code.txt" run
|and|	"r4/system/edit-codea.txt" run
	;

:editfile
	actual -? ( drop ; )
	getinfo $7 and
	0? ( drop ; )
	setactual savem
	1 >? ( nrun ; )
	drop
	runedit
	;

:enter
	actual getinfo $f and
	0? ( drop expande ; )
	8 =? ( drop contrae ; )
	drop
	setactual savem
	runedit
	;

:enter2
|	'padin exer:
	0 'padin !
	refreshfoco
	;

#nfile

:newfile
	setactual
	1 'nfile !
	0 'name !
	;

:remaddtxt | --
	'name ".txt" =pos 1? ( drop ; ) drop
	".txt" swap strcat ;

:createfile
	0 'nfile !
	remaddtxt
	savem
	mark
	"^r4/lib/gui.txt" ,ln ,cr
	":main" ,ln
	"	show clrscr" ,ln
	"	""Hello Human!"" print " ,ln
	"	'exit >esc<" ,ln
	"	cminiflecha ;" ,ln ,cr
	": main ;" ,ln
	'name 'path "%s/%s" mprint savemem
	empty
	runedit
	;
|--------------------------------------------
:toolbar
	blanco
	sp 'path $FFF444 fprint "/" $FFF444 fprint
	nfile 0? ( actual getinfo 1 and 1? ( 'name $FFF444 fprint ) drop )( 'name 32 inputcell 'createfile <enter> ) drop
	sp
	'runfile dup <f1> "1Run" $004777 flink sp
	'editfile dup <f2> "2Edit" $004777 flink sp
	'newfile dup <f3> "3New" $004777 flink sp
	cr
	;
|--------------------------------------------

:fdn
	actual nfiles 1- >=? ( drop ; )
	1+ pagina linesv + 1- >=? ( dup linesv - 1+ 'pagina ! )
	'actual !
	setactual
	loadfile
	;

:fpgdn
	actual nfiles 1- >=? ( drop ; )
	20 + nfiles >? ( nfiles 1- 'actual ! drop )( 'actual ! )
	actual pagina linesv + 1- >=? ( dup linesv - 1+ 'pagina ! ) drop
	setactual
	loadfile
	;

:fend
	actual nfiles 1- >=? ( drop ; ) drop
	nfiles 1- 'actual !
       	actual 1+ pagina linesv + 1- >=? ( dup linesv - 1+ 'pagina ! ) drop
	setactual
	loadfile
	;

| --
	
:fup	actual 0? ( drop ; )
	1- pagina <? ( dup 'pagina ! )
	'actual !
	setactual
	loadfile
	;
	
:fpgup
	actual 0? ( drop ; )
	20 - 0 <? ( drop 0 )
	pagina <? ( dup 'pagina ! )
	'actual !
	setactual
	loadfile
	;
	
:fhome	actual 0? ( drop ; ) drop
	0 'actual !
	0 'pagina !
	setactual
	loadfile
	;

|-----------------------------
:boton | nrp 'vector nombre --
	swap  flatbtn
	;
:aa	0 source !
	dup getinfo $f and
	0? ( drop expande ; )
	8 =? ( drop contrae ; )
	drop
	setactual
	loadfile
	;


:inka
	over actual =? ( 2drop $444444 ink linefill $ffffff ink ; ) drop ink ;

:ta | nro -- nro
	$9FA5B5 inka
	dup getlvl 2* 1+ nsp
	dup getname print
	;

:t0 | nro -- nro
	$9FA5B5 inka
	dup getlvl 2* nsp " + " print
	dup getname print "/" print
|	verde [ dup 'actual ! enter ; ] boton
	;

:t8 | nro -- nro
	$E4C189 inka
	dup getlvl 2* nsp " - " print
	dup getname print "/" print
|	cyan [ dup 'actual ! enter ; ] boton
	;

#info 't0 'ta 'ta 'ta 'ta 'ta 'ta 'ta 't8

:drawl
|	actual =? ( ">>" printx )
	dup getinfo $f and 2 << 'info + @ exec ;

:clicktree |
	dup 'actual !
	setactual
	actual getinfo $f and
	0? ( drop expande ; )
	8 =? ( drop contrae ; )
	drop
	loadfile
	;

:drawtree
|	ccw 5 <<
	sw 2 >> 'tx2 !
|	$222222 ink
|	tx1 ccy tx2 ty2 cajaf
	0 ( linesv <? )(
		dup pagina +
		nfiles >=? ( 2drop ; )
		'clicktree onLineClick
    	drawl drop
		cr 1+ ) drop ;

:drawfulltree
|	ccw 5 <<
|	sw 2 >> 'tx2 !
|	$222222 ink
|	tx1 ccy tx2 ty2 cajaf
	0 ( nfiles <? )(
		'clicktree onLineClick
    	drawl cr allowchome
		1+ ) drop ;


:drawsource
|	ccw 5 <<
	sw 2 >> 'tx1 !
	sw 8 - 'tx2 !
	0 0 gotoxy
	source 0? ( drop ; ) amarillo
	linesv code.nlines drop
	;

:main
	$111111 'paper !
	4
|	robotoregular 48 rfont!
|	'fontdroidsans13 fontm
	clrscr 
	rows 1- 'linesv !

	show clrscr
|		$777777 ink linefill | linea abajo
		'newfile over ":R%d" mprint sp $0f0777 flink sp
|		">" print blanco 'padin 1024 inputcr cr cr
		toolbar
		chome!

|		drawfulltree
		drawtree


		drawsource

		0 'tx1 !
		'fdn <dn>
		'fpgdn <pgdn>
		'fend <end>

		'fup <up>
		'fpgup <pgup>
		'fhome <home>

		'enter <enter>
		'exit >esc<
		cminiflecha 
		;

#keys )( 4096
#keys> 'keys
:keytest
	show
	clrscr
	over "%d" print cr
	msec "%d " print cr
	key "%h" print cr
	'keys 1024 ( 1? )( 1- swap
		@+ "%h " allowcr print
		swap ) 2drop
	key keys> 4 - @ <>? ( dup keys> !+ 'keys> ! ) drop

	'exit >esc<
	;

:ram
	mark
	rebuild
	here 'source ! 0 source !
	loadm
	;

: ram
main
|keytest
savem ;
