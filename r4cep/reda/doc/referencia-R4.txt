** Prefijos

:nueva  	define NUEVA como la lista a acontinuacion hasta ;  
#memoria  	define MEMORIA como una variable.
^modulo.txt incluye el archivo r.txt en el codigo actual.
'cosa  		apila la DIRECCION de la PALABRA (ya definida).
|blabla 	comentario, ignora hasta el fin de la linea.
"bla bla"  	texto (incluye espacios), apila su DIRECCION,

** Inicio de programa

: (dos puntos solos )

** Construccion
";"					Fin de palabra 

"("  ")"   ")("			Definir Bloques

	( ... )			Repetir las PALABRAS dentro de parentesis
	?? ( .V. )( .F. )	Condicion
	( .F. ?? )			Repeticion Hasta condicion (pasa 1 vez al menos)
	( .. ?? )( .V. )		Repeticion Mientras condicion

"["  "]"				Definicion Anonima

	[ ... ] 			Definicion de codigo sin nombre (apilando su direccion)


** Condicion simple
0? 	| --		0 el tope de la pila ?
+? 	| --		positivo el tope de la pila ?
-?	| --		negativo el tope de la pila ?
1? 	| --		distinto a 0 el tope de la pila ?

** Condicion doble
=?		| a b -- a	a = b ?
<?		| a b -- a	a < b ?
>?		| a b -- a	a > b ?
<=?	| a b -- a	a <= b ?
>=?	| a b -- a	a >= b ?
<>?	| a b -- a	a <> b ? 
AND?	| a b -- a	a and b ? 
NAND?	| a b -- a	a nand b ? 

** Vectorizacion
EXEC  	| vector --  	llama al codigo del vector ( 0 no llama a nadie)

** Pila de datos
DUP 	| a -- a a
DROP 	| a -- 
OVER 	| a b -- a b a
PICK2 	| a b c -- a b c a
PICK3 	| a b c d -- a b c d a
PICK4 	| a b c d e -- a b c d e a
SWAP 	| a b -- b a
NIP		| a b -- b
ROT 	| a b c -- b c a
2DUP 	| a b -- a b a b
2DROP   | a b --
3DROP   | a b c --
4DROP   | a b c d --
2OVER	| a b c d -- a b c d a b 
2SWAP	| a b c d -- c d a b

** Pila R (de direcciones)
>R 		| a --      R: -- a				
R> 		| -- a	R: a -- 
R		| -- a      R: a -- a			
R+		| v --	R: a -- a+v
R@+	| -- v      R: a -- a+4			
R!+		| v --	R: a -- a+4
RDROP	| --		R: a --

 ** Llogicas
AND 	| a b -- c     c = a AND b		
OR 		| a b -- c     c = a OR b
XOR 	| a b -- c     c = a XOR b		
NOT  	| a b -- c     c = a NOT b

** Aritmeticas
+ 		| a b -- c	c=a+b		
- 		| a b -- c	c=a-b
* 		| a b -- c	c=a*b		
/ 		| a b -- c	c=a/b
*/ 		| a b c -- d	d=a*b/c	resultado intermedio en 64 bits
*>>	| a b c -- d	d=(a*b)>>c	 resultado intermedio en 64 bits
/MOD 	| a b -- c d	c=a/b  d=a resto b
MOD 	| a b -- c	c=a resto b	
ABS		| a -- b		b=|a|
NEG 	| a -- b		b=-a
1+ 		| a -- b		b=a+1		
4+		| a -- b		b=a+4 (por velocidad solamente)
1- 		| a -- b		b=a-1
2/ 		| a -- b		b=a/2		
2* 		| a -- b		b=a*2
<< 		| a b -- c	c=a<<b		
>> 		| a b -- c	b=a>>b (arrastra signo)

** Memoria
@ 		| a -- b		b=32(a)			
C@ 		| a -- b		b=8 (a)			
W@		| a -- b		b=16(a)			
!		| v d --		32(d) = v
C!		| v d --		8(d) = v
W! 		| v d --		16(d) = v
+! 		| v d --		32(d)=32(d)+v	
C+!		| v d --		8(d)=8(d)+v		
W+!  	| v d --		16(d)=16(d)+v
@+		| d -- d+4	dword
!+		| v d -- d+4			
C@+	| d -- d+1	byte
C!+		| v d -- d+1			
W@+	| d -- d+2	word
W!+		| v d -- d+2			

** Sistema
MSEC 	| -- a 		milisegundos del sistema
TIME 	| -- h m s 	hora minutos y segundos
DATE 	| -- d m a	dia mes y anio
END 	| --			Sale del reda4, finaliza TODO, apaga la maquina
RUN  	| "" --		Carga compila y ejecuta el archivo del nombre

** Pantalla
BPP		| -- 32		fix!
SW 		| -- w		Ancho de pantalla
SH 		| -- h		Alto de pantalla
CLS 		| --			Limpia pantalla
REDRAW  | --		Dibuja la pantalla real con la virtual
FRAMEV	| -- m		Memoria de video
UPDATE	| --			Actualiza los eventos internos como el raton, el teclado, etc

** Entrada
XYMOUSE | -- x y 	coordenadas de la pantalla del apuntador
BMOUSE	| -- b		estado del apuntado
KEY		| -- s		ultima tecla pulsada (scancode)
CNTJOY	| -- cnt		cantidad de joysticks
AJOY	| n j -- v		palanca N  de joystick J
BJOY	| n j -- v		boton N de joystick J

** Interrupciones
IPEN!	| v --
IKEY!	| v --
IJOY	| v --	**** NO IMPLEMENTADO ****
ISON	| v --	**** NO IMPLEMENTADO ****
INET	| v --	**** NO IMPLEMENTADO ****

** Dibujo
OP 		| x y –-	Punto de origen
CP 		| x y –-	Punto de curva
LINE 	| x y –-	Traza línea
CURVE 	| x y –-	Traza curva
PLINE 	| x y --	Traza línea poligono
PCURVE 	| x y --	Traza curva poligono
POLI	| --		Traza polígono

** Color
PAPER	| a –-	Asigna color de fondo
INK		| a --	Asigna color de dibujo
INK@	| -- a	color de dibujo
ALPHA 	| a --	Transparencia (canal alpha)

** Archivos
MEM
DIR		| "foldername" –	Cambia la carpeta actual
FILE		| n -- "filename"		Nombre del archivo n
FSIZE	| n -- cnt			Tamanio del archivo
VOL		| n -- "foldername"	Nombre de la carpeta n
LOAD	| d "filename" -- e	Carga un archivo en memoria
SAVE	| d n "filename" –	Graba memoria en un archivo

** Sonido
SLOAD	| "a.wav" -- s	; carga sonido
SPLAY	| s --			; toca sonido, 0 = apaga todos los canales
