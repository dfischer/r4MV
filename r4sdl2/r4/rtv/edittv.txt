| rTV
| 2016 PHREDA
|-----------------------------------------
^r4/lib/gui.txt

^r4/lib/dlgfile.txt
^r4/lib/dlgcol.txt

^r4/lib/loadjpg.txt
^r4/lib/loadpng.txt
^r4/lib/loadbmp.txt

^r4/lib/trace.txt

^r4/rtv/plqlib.txt

#remem

|------------------------------------------------
#tiempo

:lerp | a b -- r | a + t * (b - a) | t 0.0 .. 1.0
	over - tiempo 16 *>> + ;

|----- pagina
#bmodo 1
#bcolor $ffffff

#box )( $ffff
#box> 'box
#box< 0
#mbox )( $ffff
#mbox> 'mbox

#palcnt 0
#palimg )( $ff
#boxfn )( $fff
#boxfn> 'boxfn

#filename )( 256
#fileaux )( 256

:box.ini
	'box 'box> ! 0 'box< !
	'mbox 'mbox> !
	0 'palcnt !
	'boxfn 'boxfn> !
	1 'bmodo ! $ffffff 'bcolor ! ;

:,box | v --
	box> !+ 0 over ! 'box> ! ;

:loadimg | filename -- img
	".jpg" =pos 1? ( drop loadjpg ; ) drop
	".png" =pos 1? ( drop loadpng ; ) drop
	".bmp" =pos 1? ( drop loadbmp ; )
	2drop 0 ;

:getimg | nro -- img
	3 << 'palimg + 4+ @ ;

:setimg | str nro --
	3 << 'palimg + >r
	boxfn> 'boxfn - r!+
	dup boxfn> strcpyl 'boxfn> !
	loadimg r> ! ;

:palexist? | str -- nro/-1
	'palimg >r
	0 ( palcnt <? )(
		r@+ 'boxfn + pick2 = 1? ( drop nip rdrop ; ) drop
		4 r+
		1+ ) 2drop
	rdrop -1 ;

:elijeimg | -- nro
	"atv/placas" dlgfileload 0? ( drop -1 ; )
	'fileaux strcpy
	'fileaux palexist? 0 >=? ( ; ) drop
	'fileaux palcnt setimg
	palcnt dup 1+ 'palcnt !
	;

:clickimg
	elijeimg over ! ;

:imgpal | 'var --

|	0 ( palcnt <? )(
|		dup getimg >r ccx ccy 64 40 r> img.drawsize
|		42 'ccy +!
|		1+ ) drop
	amarillo
	'clickimg "NEW IMG" link
	drop ;

|------------------------------------------------
#last
:plqload | "" --
	here swap load here =? ( drop ; ) 'last !
	here >r
	r@+ dup
	24 >> $ff and 'bmodo !
	$ffffff and 'bcolor !
	'box r@+ ( 1? )( r@+ rot !+ swap 1- ) drop 'box> !
	0 'box< !
	'mbox r@+ ( 1? )( r@+ rot !+ swap 1- ) drop 'mbox> !

	r@+ 'palcnt !
	r> 'boxfn swap last over - cmove
    remem 'here !
    'palimg >r
	'boxfn dup 'boxfn> !
	0 ( palcnt <? )( swap
		dup 'boxfn - r!+
		dup >>0 swap loadimg r!+
    	swap 1+ ) 2drop
    rdrop
	;

:plqsave | "" --
	mark
	bmodo 24 << bcolor or ,
	box> 'box - 2 >> dup ,
	'box >r ( 1? )( r@+ , 1- ) rdrop drop
	mbox> 'mbox - 2 >> 1+ dup ,
	'mbox >r ( 1? )( r@+ , 1- ) rdrop drop
    palcnt dup ,
    'palimg >r
    ( 1? )(
		r@+ 'boxfn + ,s 0 ,c
		4 r+
    	1- ) drop rdrop
	savemem
	empty
	;

:loadplq
	"atv" dlgfileload 0? ( drop ; )
	dup 'filename strcpy
	plqload
	;

:saveplq
	"atv" dlgfilesave 0? ( drop ; )
	dup 'filename strcpy
	plqsave
	;

|--------------------------
:2color dup $f0f0f0 and dup 4 >> or swap $f0f0f and dup 4 << or ;
:bfill tx1 ty1 tx2 ty2 cajaf ;

#pad

:f0	dup 28 >> $f and 0? ( 2drop ; ) 'pad ! ink
	tx1 ty1 2dup op tx2 ty1 pline tx2 ty2 pline tx1 ty2 pline pline
	tx1 pad + ty1 pad + 2dup op tx2 pad - ty1 pad + pline tx2 pad - ty2 pad - pline tx1 pad + ty2 pad - pline pline
	poli ;
:f1	ink bfill ;			| solido

:f2	$ff and getimg >r
	tx1 ty1 tx2 ty2
	pick2 - swap pick3 - swap
	r> img.adrawsize ;

:f3 2color fcol tx1 ty2 fcen 1.0 tx2 tx1 - 1 max / 0 fmat lfill bfill sfill ;
:f4 2color fcol tx1 ty2 fcen 0 1.0 ty2 ty1 - 1 max / fmat lfill bfill sfill ;
:f5 2color fcol tx1 ty1 fcen 0.5 tx2 tx1 - 1 max / 0.5 ty2 ty1 - 1 max / neg fmat lfill bfill sfill ;
:f6 2color fcol tx1 ty2 fcen 0.5 tx2 tx1 - 1 max / 0.5 ty2 ty1 - 1 max / fmat lfill bfill sfill ;
:f7 drop ;	| auxiliar

#lbfill f0 f1 f2 f3 f4 f5 f6 f7

::fillbox | nro --
	dup 28 >> 7 and 2 << 'lbfill + @ exec ;


|------------------------------------------------
#e.bmodo $1
#e.color $00ff00
#e.img 0

#e.fcolor $ffffff
#e.font 0 #e.size 40 #e.align 0
#e.padx 8 #e.pady 8
#e.x1 #e.y1 #e.x2 #e.y2
#e.text	)( 1024
#e.img )( 256
#e.rimg 0

#x1 #y1 #x2 #y2

:e.ini
	0 dup 2dup 'x1 ! 'y1 ! 'x2 ! 'y2 ! ;

:editor.ini
	1 'e.bmodo !
	$00ff00 'e.color !
	$ffffff 'e.fcolor !
	0 'e.font ! 40 'e.size ! 0 'e.align !
	8 'e.padx ! 8 'e.pady !
	0 'e.text !
	0 'e.img !
	e.ini ;

:editor.set | adr --
	dup 'box< !
	@+ grid2i 'e.y2 ! 'e.x2 ! 'e.y1 ! 'e.x1 !
	@+ dup 28 >> $f and 'e.bmodo ! $ffffff and 'e.color !
	@+ dup $ff and 'e.size !
		8 >> dup $f and 'e.font !
		4 >> dup $f and 'e.align !
		4 >> dup $ff and 'e.padx !
		8 >> $ff and 'e.pady !
	@+ 'e.fcolor !
	@ 'mbox + 'e.text strcpy
	refreshfoco
	;

|-------------------
:box.edit | --
	e.x1 e.y1 grid2xy 'ty1 ! 'tx1 !
	e.x2 e.y2 grid2xy 'ty2 ! 'tx2 !
	e.bmodo 28 << e.color or fillbox
	e.fcolor ink
	e.font e.size 1+ h2grid setfont
	e.padx w2grid e.pady h2grid boxpad
	'e.text e.align boxprintn
	;

:box.draw | adr --
	box< =? ( 20 + box.edit ; )
	@+ grid2po
	@+ fillbox
    @+
	dup 8 >> $f and over $ff and 1+ h2grid setfont
	dup 16 >> $ff and w2grid over 24 >> $ff and h2grid boxpad
	12 >> $f and	| align
	swap @+ ink
	@+ 'mbox + rot boxprintn
	;

:box.show
	'box ( box> <? )( box.draw ) drop ;

|------------------------

:dot
	setxy $1f00 px!+ ;

:grid.show
	0 ( 256 <? )(
		0 ( 256 <? )(
			2dup grid2xy dot
			1+ ) drop
		1+ ) drop ;

:grid.frame
	0 0 grid2xy 'ty1 ! 'tx1 !
	$ff $ff grid2xy  'ty2 ! 'tx2 !
	bmodo 28 << bcolor or fillbox
	cyan
	tx1 1- ty1 1- 2dup op
	tx2 over line
	tx2 ty2 line
	over ty2 line
	line
	;

:addbox
	x1 x2 =? ( drop ; ) drop
	x1 x2 over <? ( swap ) 8 << swap 24 << or
	y1 y2 over <? ( swap ) swap 16 << or or
				,box	| x1 y1 x2 y2
	$10f0f0f	,box	| fondo
	$00001120	,box	| yp(8) xp(8) align(4) font(4) size(8)
	$ff			,box	| color fuente
	mbox> 'mbox - ,box	| string
	e.ini
	box> 20 - editor.set
	;

:smove | de sr cnt --
	rot pick2 <? ( rot rot cmove ; )
	rot rot cmove> ;

:strajuste | dif adr -- dif
	20 +
	box> <? ( dup @ 'mbox + dup pick3 + swap mbox> over - smove ) | Hace lugar
	( box> <? )( over over +! 20 + ) drop	| corre punteros
	dup 'mbox> +! ;

:setbox
	box< 0? ( drop ; ) >r
	e.x1 e.x2 over <? ( swap ) 8 << swap 24 << or
	e.y1 e.y2 over <? ( swap ) swap 16 << or or
	r!+								| x1 y1 x2 y2
	e.bmodo 28 << e.color or r!+	| fondo
	e.size $ff and
	e.font $f and 8 << or
	e.align $f and 12 << or
	e.padx $ff and 16 << or
	e.pady $ff and 24 << or r!+		| yp(8) xp(8) align(4) font(4) size(8)
	e.fcolor r!+					| tipo-color fuente

	'e.text count nip r @ 'mbox + count nip - 1? ( r strajuste ) drop
	'e.text	r @ 'mbox + strcpyl mbox> max 'mbox> !
	rdrop
	;

|--------------------------------
#mode 0

:bal | "n" n
	e.align =? ( verde )( negro )
	[ dup 'e.align ! ; ] rot btnt
	drop ;

:dfont e.font 1- $7 and 'e.font ! ;
:ufont e.font 1+ $7 and 'e.font ! ;


:edmove
	xymouse xy2grid pick2 ! pick2 !
	e.x1 e.x2 >? ( e.x2 'e.x1 ! 'e.x2 ! )( drop )
	e.y1 e.y2 >? ( e.y2 'e.y1 ! 'e.y2 ! )( drop )
	;

:edver | 'varx 'vary --
	6 dup 'w ! 'h !
	over @ over @ grid2xy
	2dup 3 fbox
	'yc ! 'xc !
    [ ; ] 'edmove guiDnMoveA
	2drop ;

#xa #ya

:movebox
	xymouse
	ya - swap xa - swap
	x1 pick2 + y1 pick2 + xy2grid 'e.y1 ! 'e.x1 !
	x2 rot + y2 rot + xy2grid 'e.y2 ! 'e.x2 !
	;

:choobox
	setbox dup 4 - editor.set
	xymouse 'ya ! 'xa !
	tx1 'x1 ! ty1 'y1 !
	tx2 'x2 ! ty2 'y2 !
	;

:boxsel1 | adr --
	box< =? ( 4+ e.x1 e.y1 grid2xy 'ty1 ! 'tx1 ! e.x2 e.y2 grid2xy 'ty2 ! 'tx2 ! )( @+ grid2po )
	win2gc
	'choobox 'movebox guiDnMoveA
	16 + ;

:boxsel
	'box ( box> <? )( boxsel1 ) drop
	box< 0? ( drop ; ) drop
	blink 1? ( blanco )( negro ) drop
	'e.x1 'e.y1 edver
	'e.x1 'e.y2 edver
	'e.x2 'e.y2 edver
	'e.x2 'e.y1 edver
	;

:modesel
	home 1 8 gotoxy chome!

	"* Texto *" 'e.text inputvoid cr cr2
	blanco
    "Color:" print cr cr2
	'e.fcolor inputhex cr cr
	blanco "Fuente:" print e.font "%d" print cr cr2
	cyan 'dfont "<" btnt sp 'ufont ">" btnt cr cr
	blanco "Tamaño:" print 'e.size inputdec cr cr2
	blanco "Alineacion:" print cr cr2
	"1" 1 bal sp "2" 2 bal sp "3" 3 bal cr cr
	"4" 5 bal sp "5" 6 bal sp "6" 7 bal cr cr
	"7" 9 bal sp "8" 10 bal sp "9" 11 bal cr cr
	blanco
	"Pading:" print cr cr2
	"x:" print 'e.padx inputdec sp
	"y:" print 'e.pady inputdec cr cr2

|	"Lugar:" print cr cr2
|	e.y2 e.x2 e.y1 e.x1 "%d:%d %d:%d" print cr cr
	"Fondo:" print cr cr2
	" VACIO _SOLIDO _IMAGEN _DEG.HOR_DEG.VER_DEG.D1 _DEG.D2 " 'e.bmodo rbtn cr cr2
	e.bmodo 2 =?
	( 'e.color imgpal )( 'e.color inputhex )
	drop cr cr

   	boxsel
	;

:modebox
	[ xymouse xy2grid 2dup 'y2 ! 'x2 ! 'y1 ! 'x1 ! ; ]
	[ xymouse xy2grid 'y2 ! 'x2 ! ; ]
	[ xymouse xy2grid 'y2 ! 'x2 ! addbox 'modesel 'mode ! ; ]
	guiMap
	verde
	x1 y1 grid2xy x2 y2 grid2xy caja
	;


:modebac
	home 1 8 gotoxy chome!
	blanco
	"Fondo:" print cr cr2

	" VACIO _SOLIDO _IMAGEN _DEG.HOR_DEG.VER_DEG.D1 _DEG.D2 " 'bmodo rbtn cr cr2
	bmodo 2 =?
	( 'bcolor imgpal )( 'bcolor inputhex )
	drop
	;

:btnmodo |
	mode =? ( azul )( negro )
	[ dup 'mode ! refreshfoco setbox ; ] rot btnt
	drop ;

:setlayer
	setbox dup editor.set
	'modesel 'mode !
	;

:dellayer   
 	setbox
	dup 16 + @ 'mbox + count nip 1+ neg	| quita todo string
	over 16 + strajuste drop
	dup dup 20 + box> pick2 - 2 >> move
	-20 'box> +!
	0 mbox> !
	0 'box< ! ;

:showlayers
	home
	cols 10 - 3 gotoxy chome!
	1 'box ( box> <? )(
		box< =? ( verde )( negro )
|		cyan dup 16 + @ "%h " print
		'setlayer pick2 " #%d " sp btnt
		rojo 'dellayer "x" link
		cr cr2

		20 + swap 1+ swap
		) 2drop ;

|------------------------------------

:playscript
		;

|------------------------------------
:newplq
	'modebac 'mode !
	remem 'here !
	editor.ini
	box.ini
	;

:modefil
	home 1 8 gotoxy chome!
	cyan
	'newplq  " NUEVO " btnt cr cr
	'loadplq " CARGA " btnt cr cr
	'saveplq " GRABA " btnt cr cr
	verde
	'playscript " PLAY " btnt cr cr
	;


:showtools
	scr home
	1 3 gotoxy chome!
	"Fondo " 'modebac btnmodo sp
	"Placa " 'modefil btnmodo
	cr cr
	"Editar" 'modesel btnmodo sp
	"Agrega" 'modebox btnmodo

	;

:main
	'modebac 'mode !
	4
	editgrid
	show fonti clrscr
		verde oscuro 2 linesfill
		blanco
		dup ":r%d EditorTV " print
		'filename "%s" print
		cr

		grid.frame
		box.show

		scr fonti
		showtools
        showlayers

		mode exec

		'exit >esc<

		cminiflecha ;

:ini
	rerand
	mark
	here 'remem !
	;

: ini main ;