| LoadPng
| PHREDA 2015
|------------
^r4/lib/inflate.txt

#wpng
#hpng
#dpng	| deph
#cpng	| color
#opng	| compression
#fpng	| filter
#ipng	| interlace

#key.rgb

#pxsize

#idat>
#databyte

#imem
#palsize
#pal
#img
#emem

|------ filter
#wf

:paeth2 | a b pa pb -- p
	over >=? ( 3drop ; ) 2drop nip ;

:paeth | a b c -- p
	pick2 pick2 + over - 	| a b c p
	pick3 over - abs swap	| a b c pa p
	pick3 over - abs swap	| a b c pa pb p
	pick3 - abs				| a b c pa pb pc
	pick2 >=? ( drop rot drop paeth2 ; ) | a b pa pb
	>r >r drop rot drop r> r> | b c pb pc
	paeth2 ;


:fnoneline | x y data x -- x y data
	+ ;

:fsubline | x y data x -- x y data
	pxsize - swap pxsize + swap
	( 1? )( 1- swap
		dup pxsize - c@ over c+! 1+
		swap ) drop ;

:fupline | x y data x -- x y data
	( 1? )( 1- swap
		dup wf - c@ over c+! 1+
		swap ) drop ;

:favgline | x y data x -- x y data
	pxsize ( 1? )( >r
		1- swap
		dup wf - c@ $ff and 2/ over c+! 1+ swap
		r> 1- ) drop
	( 1? )( 1- swap
		dup pxsize - c@ $ff and over wf - c@ $ff and + 2/ over c+! 1+
		swap ) drop ;

:favgline0 | x y data x -- x y data
	pxsize - swap pxsize + swap
	( 1? )( 1- swap
		dup pxsize - c@ $ff and 2/ over c+! 1+
		swap ) drop ;

:fpaeline | x y data x -- x y data
	pxsize ( 1? )( >r
		1- swap
		0 over wf - c@ $ff and 0 paeth
		over c+! 1+ swap
		r> 1- ) drop
	( 1? )( 1- swap
		dup pxsize - c@ $ff and
		over wf - c@ $ff and
		pick2 wf - pxsize - c@ $ff and
		paeth over c+! 1+
		swap ) drop ;

:fpaeline0 | x y data x -- x y data
	pxsize - swap pxsize + swap
	( 1? )( 1- swap
		dup pxsize - c@ $ff and 0 0
		paeth over c+! 1+
		swap ) drop ;

#linefilter fnoneline fsubline fupline favgline fpaeline
#linefilter0 fnoneline fsubline fnoneline favgline0 fpaeline0

:unfilter | w h data -- data
	pick2 1+ 'wf !
	swap 1- swap
	c@+ | x y data filte
	pick3 swap
	$7 and 2 << 'linefilter0 + @ exec | x y data
	swap
	( 1? )( 1- swap
		c@+   | x y data filter
		pick3 swap
		$7 and 2 << 'linefilter + @ exec | x y data
		swap ) drop nip ;

#adambox $33 $33 $23 $22 $12 $11 $01 -1

:unfilteradam | --
	databyte
	'adambox >r
	( r@+ +? )(
		wpng over 4 >> >> pxsize *
		hpng rot $f and >>
		rot unfilter
		) 2drop rdrop ;

|------ convert
|//greyscale
:mode01 | b -- pixel ;modo 0 ; modo 0 1bits
:mode02 | b -- pixel ;modo 0 ; modo 2 1bits
:mode04 | b -- pixel ;modo 0 ; modo 4 1bits
	;
:mode08 | b -- b pixel ; modo 0 8bits
	c@+ $ff and
	key.rgb =? ( 0 )( $ff000000 )
	over 8 << dup 8 << or or or ;

|//RGB color
:mode28
	c@+ $ff and 16 << swap
	c@+ $ff and 8 <<  swap
	c@+ $ff and rot or rot or
	key.rgb <>? ( $ff000000 or ) ;

|//indexed color (palette)
:mode38
	c@+ $ff and 2 << pal + @ ;

:mode34
:mode32
:mode31
	;
|//greyscale with alpha
:mode48
	c@+ $ff and
	dup 8 << dup 8 << or or
	swap c@+ 24 << rot or ;

|//RGB with alpha
:mode68
	@+ dup $ff and 16 << over $ff0000 and 16 >> or swap $ff00ff00 and or ; 

#modec

|------ interlace
| sx sy x y
#arrayadam7
$8800
$8840
$4804
$4420
$2402
$2210
$1201
0

:ppixel! | y x c -- y x
	pick2 wpng * pick2 + 2 << img + ! ;

:adam7step | v --
	dup 12 >> $f and
	over 8 >> $f and
	rot dup 4 >> $f and
	swap $f and
    databyte >r
	( hpng <? )(
		1 r+
		over ( wpng <? )(
			r> modec exec swap >r
			ppixel!
			pick4 + ) drop
		 pick2 + ) 4drop
	r> 'databyte ! ;

:convertadam7
	'arrayadam7 ( @+ 1? )( adam7step ) 2drop ;

:convert
	img >r
	databyte
	hpng ( 1? )(
		swap 1+ swap
		wpng ( 1? )(
			rot modec exec r!+
			rot rot 1- ) drop
		1- ) 2drop
	rdrop
	;

|-----------------------------------------
:readlen | adr -- adr len
	dup 8 - @
	dup $ff and 24 << over $ff00 and 8 << or
	over $ff0000 and 8 >> or swap 24 >> $ff and or ;

:didat | adr -- adr'
	readlen | adr len
	idat> pick2 pick2 cmove | des scr cnt
	dup 'idat> +!
	+ ;

:dplte
	readlen | adr len
	pal >r
	2dup ( +? )( 3 - swap
		c@+ swap c@+ swap c@+
		$ff and rot $ff and 8 << or rot $ff and 16 << or $ff000000 or
		r!+
		swap ) 2drop
	rdrop
	+ ;

:dtrns
	readlen | adr len
	+ ;

:readchunk | adr code -- adr'
	$54414449 =? ( drop didat ; ) | IDAT
	$45544c50 =? ( drop dplte ; ) | PLTE
	$534e5274 =? ( drop dtrns ; ) | tRNS
	drop readlen + ; | desconocido, saltea

#colchan ( 1 0 3 1 2 0 4 0 0 )
#colmode mode08 0 mode28 mode38 mode48 0 mode68

:pngheader | 'mem -- 0/mem
	12 +
	read32 'wpng !
	read32 'hpng !
	c@+ 'dpng !
	c@+
	3 =? ( $3ff )( 0 ) 'palsize !
	dup 'colchan + c@ dpng * 7 + 3 >> 'pxsize !
	dup 2 << 'colmode + @ 'modec !
	'cpng !
	c@+ 'opng !
	c@+ 'fpng !
	c@+	'ipng !

	imem 8 +
|	dup 'pal ! palsize +
	dup 'img ! wpng hpng * 2 << +
	'emem !

	img 'idat> !
	emem 'pal !
	;

:exitok
	emem 'here !
	0					| type
	wpng hpng 16 << or	| size
	imem !+ !
	imem
	;

|-----------------------------------------
::loadPNG | "" -- 'img/0
	here swap load
	here =? ( drop 0 ; ) drop
	here dup 'imem !
	@+ $474e5089 <>? ( 2drop 0 ; ) drop | magic
	pngheader 0? ( ; )  | header error
	$ff000000 'key.rgb !
	( 8 + @+ $444e4549 <>? )(  | IEND
		readchunk ) 2drop
	emem palsize + dup 'databyte ! 'here !
	img 2 + inflate
	ipng 1? ( drop unfilteradam	convertadam7 exitok ; ) drop
	wpng pxsize * hpng databyte unfilter drop
	convert exitok ;
